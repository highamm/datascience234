[{"path":"index.html","id":"syllabus-and-course-information","chapter":"1 Syllabus and Course Information","heading":"1 Syllabus and Course Information","text":"","code":""},{"path":"index.html","id":"general-information","chapter":"1 Syllabus and Course Information","heading":"1.1 General Information","text":"Instructor InformationProfessor: Matt HighamOffice: Bewkes 123Email: mhigham@stlawu.eduSemester: Fall 2021Office Hours:\nTuesday 1:30 - 3:30\nWednesday 2:30 - 3:30\nFriday 10:00 - 11:00\ntimes appointment\n-person\n\nTuesday 1:30 - 3:30Wednesday 2:30 - 3:30Friday 10:00 - 11:00other times appointmentall -person\nSections:\nMW 8:50 - 10:20\nMW 8:50 - 10:20Course MaterialsSTAT 234 Materials Bundle. primary source materials.Textbooks (used references):\nModern Data Science R Baumer, Kaplan, Horton, found free online version.\nR Data Science Grolemund Wickham, found free online version.\nModern Data Science R Baumer, Kaplan, Horton, found free online version.R Data Science Grolemund Wickham, found free online version.Computer Internet access.","code":""},{"path":"index.html","id":"course-information","chapter":"1 Syllabus and Course Information","heading":"1.2 Course Information","text":"Welcome STAT 234! overall purpose course learn data science skills necessary complete large-scale data analysis projects. tool using achieve goal statistical software language R. work wide variety interesting data sets throughout semester build R skills. particular, focus Data Analysis Life Cycle (Grolemund Wickham 2020):put emphasis Import, Tidy, Transform, Visualize, Communicate parts cycle, introduction Modeling part covered STAT 213.","code":""},{"path":"index.html","id":"general-course-outcomes","chapter":"1 Syllabus and Course Information","heading":"1.3 General Course Outcomes","text":"Import data different types R analysis.Import data different types R analysis.Tidy data form can easily visualized, summarised, modeled.Tidy data form can easily visualized, summarised, modeled.Transform, Wrangle, Visualize variables data set assess patterns data.Transform, Wrangle, Visualize variables data set assess patterns data.Communicate results analysis target audience written report, , possibly oral presentation.Communicate results analysis target audience written report, , possibly oral presentation.Practice reproducible statistical practices use R Markdown data analysis projects.Practice reproducible statistical practices use R Markdown data analysis projects.Explain ethically important consider context data set comes .Explain ethically important consider context data set comes .Develop necessary skills able ask answer future data analysis questions , either using R another program, Python.Develop necessary skills able ask answer future data analysis questions , either using R another program, Python.paraphrase R Data Science textbook, 80% skills necessary complete data analysis project can learned coursework classes like one. , 20% particular project involve learning new things specific project. Achieving Goal # 6 allow learn extra 20% .","code":""},{"path":"index.html","id":"use-of-r-and-rstudio","chapter":"1 Syllabus and Course Information","heading":"1.3.1 Use of R and RStudio","text":"use statistical software R construct graphs analyze data. notes:R RStudio free use.primarily using SLU R Studio server first: Link R Studio Server.Additionally, using RMarkdown data analysis reports.\nNote: ’s always nice start assignments projects early possible, particularly important assignments projects involving R. ’s fun try figure code working last minute. start early enough though, plenty time seek help therefore won’t waste lot time coding error.","code":""},{"path":"index.html","id":"how-you-will-be-assessed","chapter":"1 Syllabus and Course Information","heading":"1.4 How You Will Be Assessed","text":"components grade described :ClassClass participation assessed three times throughout semester 20 point rubric total 60 points. Additionally, 10-point “share something interesting found class” assignment Wednesday, , two students volunteer ….share something interesting found data set working rest class. rubric used shared first day class, information Wednesday 10 points also given first day class.ExercisesThere 14 sets weekly exercises often require read sections STAT 234 Materials Bundle first. worth either 10 5 points, depending length exercises, total 100 points. weeks toward beginning semester 10 point weeks won’t projects work . Exercises graded completion : many exercises, solutions provided course materials.QuizzesThere 10 Quizzes, worth 20 points total 180 points one dropped quiz. purpose quizzes practice ’ve learned week short, concise format. Quizzes consist two parts: (1) take-home component (2) -class component. take-home component take 15 minutes. allowed use course materials allowed work students course, long list names students top quiz. -class component 5 minutes. asked simple task pen paper, without using course notes materials.Mini ProjectsThere 3 mini-projects scattered throughout semester worth 60 points . mini-project prescriptive tasks questions investigate well section come subsequently answer questions relating data set.order get experience oral presentations results, student give short oral presentation 1 mini-project. Use R Markdown required presentation (opposed PowerPoint Prezi). details given later semester.Midterm ExamsThere two midterm exams, worth 150 points. information given later.Final ProjectThere one final project, worth 150 points. primary purpose final project give opportunity assemble topics throughout course one coherent data analysis. information final project given later.Final Exam course.","code":""},{"path":"index.html","id":"breakdown","chapter":"1 Syllabus and Course Information","heading":"1.4.1 Breakdown","text":"70 points Class100 points Exercises180 points Quizzes180 points Mini-Projects + 20 points Presentation150 points two Midterm Exams150 points Final ProjectPoints add 1000 grade end semester number points ’ve earned across categories divided 1000.tutorials help complete exercises sets, \nhelp well quizzes, \nhelp complete mini-projects, \nhelp well midterm exams.\n\n\nhelp well quizzes, \nhelp complete mini-projects, \nhelp well midterm exams.\n\nhelp complete mini-projects, \nhelp well midterm exams.\nhelp well midterm exams., everything together help create awesome final project!","code":""},{"path":"index.html","id":"grading-scale","chapter":"1 Syllabus and Course Information","heading":"1.4.2 Grading Scale","text":"following rough grading scale. reserve right make changes scale necessary.","code":""},{"path":"index.html","id":"rules-for-collaboration","chapter":"1 Syllabus and Course Information","heading":"1.4.3 Rules for Collaboration","text":"Collaboration classmates handouts, tutorials, projects encouraged, must follow guidelines:must state name(s) collaborated top assessment.work must . means never send someone code via email let someone directly type code screen. Instead, can talk strategies solving problems help ask someone coding error.may use Internet StackExchange, also copy paste code directly website, without citing .isn’t rule, keep mind collaboration permitted quizzes, exams, limited collaboration permitted final project. Therefore, working someone, make sure really learning can success non-collaborative assessments.","code":""},{"path":"index.html","id":"diversity-statement","chapter":"1 Syllabus and Course Information","heading":"1.4.4 Diversity Statement","text":"Diversity encompasses differences age, colour, ethnicity, national origin, gender, physical mental ability, religion, socioeconomic background, veteran status, sexual orientation, marginalized groups. interaction different human characteristics brings positive learning environment. Diversity respected valued classroom.","code":""},{"path":"index.html","id":"accessibility-statement","chapter":"1 Syllabus and Course Information","heading":"1.4.5 Accessibility Statement","text":"learning difference/disability health impairment need accommodations please sure contact Student Accessibility Services Office right away can help get accommodations require. need use accommodations class, please meet instructor early provide Individualized Educational Accommodation Plan (IEAP) letter can best possible experience semester.Although required, instructor like know accommodations needed least 10 days quiz test. Please proactive set appointment meet someone Student Accessibility Services Office.Color-Vision Deficiency: Color-Vision Deficient, Student Accessibility Services office loan glasses students color vision deficient. Please contact office make appointment.specific information setting appointment Student Accessibility Services please see listed options :Telephone: 315.229.5537Email: studentaccessibility@stlawu.eduFor information Student Accessibility Services can check website : https://www.stlawu.edu/student-accessibility-services","code":""},{"path":"index.html","id":"academic-dishonesty","chapter":"1 Syllabus and Course Information","heading":"1.4.6 Academic Dishonesty","text":"Academic dishonesty tolerated. specific policies course supplementary theHonor Code. According St. Lawrence University Academic Honor Policy,assumed work done student unless instructor/mentor/employer gives specific permission collaboration.Cheating examinations tests consists knowingly giving using attempting use unauthorized assistance examinations tests.Dishonesty work outside examinations tests consists handing presenting original work original, originality required.Claims ignorance academic personal pressure unacceptable excuses academic dishonesty. Students must learn constitutes one's work work others must acknowledged.information, refer www.stlawu.edu/acadaffairs/academic_honor_policy.pdf.avoid academic dishonesty, important follow directions collaboration rules ask clarification questions acceptable particular assignment exam. suspect academic dishonesty, score zero given entire assignment academic dishonesty occurred individuals involved Academic Honor Council notified. pattern academic dishonesty found occurred, grade 0.0 entire course can given.important work way maximizes learning. aware students rely much others homework projects tend poorly quizzes exams.Please note addition , assignments score reduced due academic dishonesty dropped according quiz policy e.g., receive zero quiz academic dishonesty, dropped grade.","code":""},{"path":"index.html","id":"tentative-schedule","chapter":"1 Syllabus and Course Information","heading":"1.5 Tentative Schedule","text":"three mini-projects tentatively scheduled due September 27, October 25, November 8, though subject change.Final Exam, keep schedule open Final Exam time case decide use something.","code":""},{"path":"intro.html","id":"intro","chapter":"2 Getting Started with R and R Studio","heading":"2 Getting Started with R and R Studio","text":"Goals:Use R Studio serverUse R Studio serverUse R Markdown code chunksUse R Markdown code chunksLoad data R StudioLoad data R StudioRun code change things within codeRun code change things within codeCorrect common errors running code RCorrect common errors running code R","code":""},{"path":"intro.html","id":"intro-to-r-and-r-studio","chapter":"2 Getting Started with R and R Studio","heading":"2.1 Intro to R and R Studio","text":"R statistical computing software used many statisticians well professionals fields, biology, ecology, business, psychology. goal Week 0 provide basic familiarity R R Markdown, using entire semester.Open R Studio SLU R Studio server \nhttp://rstudio.stlawu.local:8787 create folder called STAT_234 meaningful title . Note must campus use R Studio server, unless use VPN. Directions set-VPN \nhttps://infotech.stlawu.edu/support/content/11269 \n<> Macs https://stlawu.teamdynamix.com/TDClient/1805/Portal/KB/ArticleDet?ID=55118  Windows.Next, create subfolder within STAT_234 folder. Title Notes (whatever want really)., create R Project Clicking File -> New Project -> Existing Directory, navigate Notes folder, click Create Project.Within folder, click New Folder button bottom-left window name new folder data. , download data.zip file Sakai (Resources). Upload file server clicking “Upload” bottom right panel. dialog box appears, can click “Choose File” navigate folder saved zip file (probably Downloads default). zip file automatically expand uploaded. includes data sets use throughout course.Finally, want create new R Markdown file clicking File -> New File -> R Markdown. can give new R Markdown file title want, click okay.moving , click Knit button top-left window top menu bar (look knitting needle icon). Make sure file knits pretty-looking .html file. newly knitted .html file can now found folder R project.","code":""},{"path":"intro.html","id":"what-are-r-r-studio-and-r-markdown","chapter":"2 Getting Started with R and R Studio","heading":"2.2 What are R, R Studio, and R Markdown?","text":"distinction 3 become clear later . now,\n* R statistical coding software used heavily data analysis statistical procedures.R Studio nice IDE (Integrated Development Environment) R lot convenient features. Think just convenient User Interface.R Studio nice IDE (Integrated Development Environment) R lot convenient features. Think just convenient User Interface.R Mardkown allows users mix regular Microsoft-Word-style text code. .Rmd file ending denotes R Mardkown file. R Markdown many options use heavily throughout semester, ’s need worry now.R Mardkown allows users mix regular Microsoft-Word-style text code. .Rmd file ending denotes R Mardkown file. R Markdown many options use heavily throughout semester, ’s need worry now.","code":""},{"path":"intro.html","id":"r-packages-and-the-tidyverse","chapter":"2 Getting Started with R and R Studio","heading":"2.2.1 R Packages and the tidyverse","text":"can think R packages add-ons R let things R able . ’re video games, can think R packages extra Downloadable Content (DLC). , unlike gaming DLC, R packages always free make heavy use R packages.tidyverse series R packages useful data science. order encounter class, core tidyverse packages :ggplot2 plotting datadplyr data wrangling summarizingtidyr data tidying reshapingreadr data importtibble data storedstringr text dataforcats factor (categorical) datapurrr, functional programming, one core 8 won’t get useWe use packages outside core tidyverse well, tidyverse main focus.going change one option proceeding. top file menu, click Tools -> Global Options -> R Markdown uncheck box says “Show output inline R Markdown documents.” Don’t worry now, changing option just means code results appear bottom-left window graphs appear bottom-right window R Studio.","code":""},{"path":"intro.html","id":"putting-code-in-a-.rmd-file","chapter":"2 Getting Started with R and R Studio","heading":"2.3 Putting Code in a .Rmd File","text":"first thing involves code load package R library() function. package just R add-lets just R . Load tidyverse package R typing running library(tidyverse) line. create code chunk, click Insert -> R. Within code chunk, type library(tidyverse) run code eitherClicking “Run” button menu bar top-left window R Studio orClicking “Run” button menu bar top-left window R Studio (Recommended) Clicking “Command + Enter” Mac “Control + Enter” PC.(Recommended) Clicking “Command + Enter” Mac “Control + Enter” PC.Note code appears grey boxes surrounded three backticks normal text different colour background backticks.run previous line, text appear bottom-left window. won’t worry much text means now, also won’t ignore completely. able spot 8 core tidyverse packages listed well numbers follow package. numbers correspond package version. ’s things , long text start “Error:” ’re good go!Congrats running first line code class! particular code isn’t particularly exciting doesn’t really anything can see.run R code using R chunk. R chunk, new line, try typing basic calculation, like 71 + 9 4 / 3, run line observe result., still wasn’t super exciting. R can perform basic calculations, just use calculator Excel . order look things bit interesting, need data.","code":"\nlibrary(tidyverse)"},{"path":"intro.html","id":"alcohol-data-example","chapter":"2 Getting Started with R and R Studio","heading":"2.4 Alcohol Data Example","text":"looking two data sets just get little bit preview things working rest semester. Important: worry understanding following code point. plenty time understand weeks ahead. purpose section just get used using R: detailed explanations exercises functions used various options coming weeks. particular, following code uses ggplot2, dplyr, tidyr packages, cover detail throughout first ~ 3-4 weeks course.Data first part obtained fivethirtyeight Five Thirty Eight GitHub page.first step read data set R. Though already downloaded alcohol.csv data zip, still need load R. Check make sure alcohol.csv data folder bottom-right hand window. following code can copied R code chunk read data:Note need full file extension data set R project.something show console window? , great! , make sure data set data folder R project set .like name data set something easily reference later, name data set using <- operator, inYou can name data set whatever want (restrictions). ’ve named alcohol_data. Now, run line code name data set, run alcohol_data, see data set appear:’s data set? see variables columns:country: name countrybeer_servings: average number beer servings per person per yearspirit_servings: average number spirit (hard alcohol) servings per person per yearwine_servings: average number wine servings per person per yeartotal_litres_of_pure_alcohol: average total litres pure alcohol consumed per person per year.One goal class able pose questions data set use tools learn answer questions. example, might want know distribution total litres alcohol consumed per person looks like across countries. , can make plot ggplot2 package, one packages automatically loads tidyverse. might start constructing following plot. Reminder: goal everyone understand code plot, don’t worry much .now want see United States (USA) falls distribution drawing red vertical line total litres alcohol consumed United States. , ’ll first use filter() function dplyr package (, learn function detail later). Copy paste following lines code new R chunk. , run lines.looks like countries consume little alcohol. might want know countries :looks like 13 countries data set consume alcohol. Note , chunk , use total_litres_of_pure_alcohol variable name name variable data set. Even something like spelling litres American English liters (total_liters_of_pure_alcohol) throw error isn’t exact name variable data set. something can aggravating first learning coding language.Now suppose want know 3 countries consume beer, 3 countries consume spirits, 3 countries consume wine per person. ’re trivia person, can form guesses. Without cheating, going guess (Germany, USA, UK) beer, (Spain, Italy, USA) wine, (Russia, Poland, Lithuania) spirits. Let’s beer first!Let’s thing Wine Spirits:Finally, suppose want know country consumes wine relative beer consumption? Let’s first look question graphically. need tidy data first pivot_longer() function tidyr package:x-axis corresponds beer servings y-axis corresponds wine servings. reference line given countries line consuming wine beer. get make plot like later: now, copy code chunk change labeled point corresponds country interests (Denmark).\nmight able better answer original question numerically computing wine beer ratio country ordering largest ratio smallest ratio:one ratios Inf?","code":"\nread_csv(\"data/alcohol.csv\")\nalcohol_data <- read_csv(\"data/alcohol.csv\")\nalcohol_data\n#> # A tibble: 193 x 5\n#>    country       beer_servings spirit_servings wine_servings\n#>    <chr>                 <dbl>           <dbl>         <dbl>\n#>  1 Afghanistan               0               0             0\n#>  2 Albania                  89             132            54\n#>  3 Algeria                  25               0            14\n#>  4 Andorra                 245             138           312\n#>  5 Angola                  217              57            45\n#>  6 Antigua & Ba…           102             128            45\n#>  7 Argentina               193              25           221\n#>  8 Armenia                  21             179            11\n#>  9 Australia               261              72           212\n#> 10 Austria                 279              75           191\n#> # … with 183 more rows, and 1 more variable:\n#> #   total_litres_of_pure_alcohol <dbl>\nggplot(data = alcohol_data,\n       mapping = aes(total_litres_of_pure_alcohol)) +\n  geom_histogram(colour = \"black\", fill = \"white\", bins = 15)\nsmall_df <- alcohol_data %>% filter(country == \"USA\")\nggplot(data = alcohol_data,\n       mapping = aes(total_litres_of_pure_alcohol)) +\n  geom_histogram(colour = \"black\", fill = \"white\", bins = 15) +\n  geom_vline(data = small_df,\n             aes(xintercept = total_litres_of_pure_alcohol),\n             colour = \"red\")\nalcohol_data %>% filter(total_litres_of_pure_alcohol == 0)\n#> # A tibble: 13 x 5\n#>    country       beer_servings spirit_servings wine_servings\n#>    <chr>                 <dbl>           <dbl>         <dbl>\n#>  1 Afghanistan               0               0             0\n#>  2 Bangladesh                0               0             0\n#>  3 North Korea               0               0             0\n#>  4 Iran                      0               0             0\n#>  5 Kuwait                    0               0             0\n#>  6 Libya                     0               0             0\n#>  7 Maldives                  0               0             0\n#>  8 Marshall Isl…             0               0             0\n#>  9 Mauritania                0               0             0\n#> 10 Monaco                    0               0             0\n#> 11 Pakistan                  0               0             0\n#> 12 San Marino                0               0             0\n#> 13 Somalia                   0               0             0\n#> # … with 1 more variable:\n#> #   total_litres_of_pure_alcohol <dbl>\nalcohol_data %>% mutate(rankbeer = rank(desc(beer_servings))) %>%\n  arrange(rankbeer) %>% \n  filter(rankbeer <= 3)\nalcohol_data %>% mutate(rankwine = rank(desc(wine_servings))) %>%\n  arrange(rankwine) %>% \n  filter(rankwine <= 3)\n\nalcohol_data %>% mutate(rankspirits = rank(desc(spirit_servings))) %>%\n  arrange(rankspirits) %>% \n  filter(rankspirits <= 3)\nonecountry_df <- alcohol_data %>% \n  filter(country == \"Denmark\")\n\nlibrary(ggrepel)\nggplot(data = alcohol_data,\n       mapping = aes(x = beer_servings, y = wine_servings)) + \n  geom_point(alpha = 0.5) +\n  geom_label_repel(data = onecountry_df, aes(label = country),\n    colour = \"purple\") +\n  geom_point(data = onecountry_df, colour = \"purple\",\n             size = 2.5, shape = 1) +\n  geom_abline(aes(slope = 1, intercept = 0), alpha = 0.3)\nalcohol_data %>%\n  mutate(wbratio = wine_servings / beer_servings) %>%\n  arrange(desc(wbratio)) %>%\n  select(country, beer_servings, wine_servings, wbratio)\n#> # A tibble: 193 x 4\n#>    country             beer_servings wine_servings wbratio\n#>    <chr>                       <dbl>         <dbl>   <dbl>\n#>  1 Cook Islands                    0            74  Inf   \n#>  2 Qatar                           1             7    7   \n#>  3 Montenegro                     31           128    4.13\n#>  4 Timor-Leste                     1             4    4   \n#>  5 Syria                           5            16    3.2 \n#>  6 France                        127           370    2.91\n#>  7 Georgia                        52           149    2.87\n#>  8 Italy                          85           237    2.79\n#>  9 Equatorial Guinea              92           233    2.53\n#> 10 Sao Tome & Principe            56           140    2.5 \n#> # … with 183 more rows"},{"path":"intro.html","id":"exercise-1-1","chapter":"2 Getting Started with R and R Studio","heading":"2.4.1 Exercises","text":"shape distribution total alcohol consumption? Left-skewed, right-skewed, approximately symmetric? Unimodal multimodal?shape distribution total alcohol consumption? Left-skewed, right-skewed, approximately symmetric? Unimodal multimodal?histogram total alcohol consumption, pick country USA interests . See can change code chunk made histogram red vertical line drawn country interests .histogram total alcohol consumption, pick country USA interests . See can change code chunk made histogram red vertical line drawn country interests .Hint: Use View() function look alcohol data set typing View(alcohol_data) bottom-left window help see countries data set.Note: careful capitalization: R case sensitive USA different usa.histogram total alcohol consumption, change fill colour bins histogram : changed code chunk?histogram total alcohol consumption, change fill colour bins histogram : changed code chunk?rankings code, wanted look top 5 countries instead top 3? See change code.rankings code, wanted look top 5 countries instead top 3? See change code.spirit rankings, think 2 countries showed instead 3? Can investigation case?spirit rankings, think 2 countries showed instead 3? Can investigation case?Change wine beer ratio code example find countries highest beer wine consumption (instead wine beer consumption).Change wine beer ratio code example find countries highest beer wine consumption (instead wine beer consumption).","code":"\nView(alcohol_data)"},{"path":"intro.html","id":"athlete-data-example","chapter":"2 Getting Started with R and R Studio","heading":"2.5 Athlete Data Example","text":"Secondly, look data set top 100 highest paid athletes 2014. athletesdata obtained https://github.com/ali-ce/datasets data set information following variables 100 highest paid athletes 2014, according Forbes (pay includes salary endorsements):Name (name athlete)Rank (athlete ranks, 1 highest paid)Sport (sport athlete plays)endorsements (money sponsorships companies)totalpay (millions year 2014, salary + endorsements)salary (money tournaments contract salary)age athlete 2014Gender (Male Female)first read data set name athletes. can use head() function look first rows data set.many different interesting questions answer data set. First, might interested relationship athlete age salary top 100 athletes. Recall earlier stat course one appropriate graphic examine relationship scatterplot:see anything strange scatterplot? think y-axis tick labels 2.5e+07, 5.0e+07, etc. mean?Now let’s see can count number athletes Top 100 personal favourite sport, Tennis:looks like 6 athletes: can see sort Rank :Finally, let’s see can compare ratio endorsements (commercials products) salary professional athletes Top 100 2 sports: Football (referring American Football) Basketball. Recall earlier Stat class might want use side--side boxplots make comparison since one categorical variable (Sport Type) one quantitative variable (Ratio Endorsements Salary).graph endorsements / salary ratio 1 indicates person makes half overall pay endorsements half overall pay salary.sport looks like tends receive larger proportion overall pay endorsements athletes top 100?","code":"\nathletes <- read_csv(\"data/athletesdata.csv\")\nhead(athletes)\n#> # A tibble: 6 x 9\n#>      X1 Name   Rank Sport endorsements totalpay salary   age\n#>   <dbl> <chr> <dbl> <chr>        <dbl>    <dbl>  <dbl> <dbl>\n#> 1     1 Aaro…    55 Foot…      7500000 22000000 1.45e7    31\n#> 2     2 Adam…    95 Golf       9000000 17700000 8.7 e6    34\n#> 3     3 Adri…    60 Base…       400000 21500000 2.11e7    32\n#> 4     4 Alex…    48 Base…       300000 22900000 2.26e7    39\n#> 5     5 Alfo…    93 Base…        50000 18050000 1.8 e7    38\n#> 6     6 Amar…    27 Bask…      5000000 26700000 2.17e7    32\n#> # … with 1 more variable: Gender <chr>\nggplot(data = athletes, mapping = aes(x = age, y = salary)) + \n  geom_point() +\n  geom_smooth(se = FALSE)\nathletes %>% group_by(Sport) %>%\n  summarise(counts = n()) %>%\n  filter(Sport == \"Tennis\")\n#> # A tibble: 1 x 2\n#>   Sport  counts\n#>   <chr>   <int>\n#> 1 Tennis      6\nathletes %>%\n  filter(Sport == \"Tennis\") %>%\n  arrange(Rank)\n#> # A tibble: 6 x 9\n#>      X1 Name   Rank Sport endorsements totalpay salary   age\n#>   <dbl> <chr> <dbl> <chr>        <dbl>    <dbl>  <dbl> <dbl>\n#> 1    82 Roge…     7 Tenn…     52000000 56200000 4.2 e6    33\n#> 2    78 Rafa…     9 Tenn…     30000000 44500000 1.45e7    28\n#> 3    72 Nova…    17 Tenn…     21000000 33100000 1.21e7    27\n#> 4    64 Mari…    34 Tenn…     22000000 24400000 2.4 e6    27\n#> 5    60 Li Na    41 Tenn…     18000000 23600000 5.6 e6    32\n#> 6    89 Sere…    55 Tenn…     11000000 22000000 1.1 e7    33\n#> # … with 1 more variable: Gender <chr>\nathletes %>% filter(Sport == \"Football\" | Sport == \"Basketball\") %>%\n  ggplot(data = ., aes(x = Sport, y = endorsements / salary)) + \n  geom_boxplot() +\n  labs(y = \"Endorsements / Salary\")"},{"path":"intro.html","id":"exercise-1-2","chapter":"2 Getting Started with R and R Studio","heading":"2.5.1 Exercises","text":"Instead looking relationship age salary top 100 athletes 2014, change plot look relationship age endorsements. change code ? Try !Instead looking relationship age salary top 100 athletes 2014, change plot look relationship age endorsements. change code ? Try !Pick Sport Tennis see can count number athletes top 100 sport well sort Rank. Careful: sports athletes Top 100.Pick Sport Tennis see can count number athletes top 100 sport well sort Rank. Careful: sports athletes Top 100.many athletes top 100 sport chose?endorsements / salary example, change one sports sport choice make comparison. sport tends receive larger proportion overall pay endorsements.endorsements / salary example, change one sports sport choice make comparison. sport tends receive larger proportion overall pay endorsements.qualification might want make statement previous exercise? (random sample athletes sport? matter?).qualification might want make statement previous exercise? (random sample athletes sport? matter?).side--side boxplots comparing endorsements salary ratio two different sports, ’ve changed y-axis label Endorsements / Salary using labs(y = \"Endorsements / Salary\") statement. Try changing x-axis label something else. think need add plot?side--side boxplots comparing endorsements salary ratio two different sports, ’ve changed y-axis label Endorsements / Salary using labs(y = \"Endorsements / Salary\") statement. Try changing x-axis label something else. think need add plot?","code":""},{"path":"intro.html","id":"finishing-up-common-errors-in-r","chapter":"2 Getting Started with R and R Studio","heading":"2.6 Finishing Up: Common Errors in R","text":"now talk little bit getting errors R can done correct common errors.may encountered errors point document. Let’s go common errors well discuss comment code.missing parenthesis: open parenthesis ( needs close ). Try running following code chunk without fixing anything.Notice bottom-left window > symbol starts line changes +. generally bad!! means forgot close parenthesis ) quote (' \"). code run since R thinks still trying type something function. fix issue, click cursor bottom-left window press Esc. , try find error code chunk.Can find missing closing parenthesis ?Missing Comma. Try running following code chunk without fixing anything.R gives “Error: unexpected symbol ….” Oftentimes, means missing comma spelled variable name incorrectly.Can find missed comma ?Capitalization IssuesIn original data set, variable Sport capitalized. capitalizing means R won’t able find proclaims “object sport found.”Forgetting Quotes. Character strings need quotation marks around . discuss later, graph labels titles need quotes around since don’t directly refer columns rows data set:error forgetting quotes typically “Unexpected Symbol” though error also given issues.quotes missing code chunk ?Finally, can add comment code chunk # symbol (always use double ## reason though). allows type comment code chunk isn’t code:Comments useful longer code chunks, allow remember something. also tell someone ’ve shared code something.Save file clicking File -> Save using keyboard shortcut Command + s (Control + s PC). Knit file clicking Knit button top-left window (knitting needles). see .html file pop , errors code!","code":"ggplot(data = athletes, aes(x = Sport, y = salary) + \n  geom_boxplot()ggplot(data = athletes aes(x = Sport, y = salary)) + \n  geom_boxplot()\nathletes %>% filter(sport == \"Tennis\")ggplot(data = athletes, aes(x = Sport, y = endorsements)) + \n  geom_boxplot() + xlab(Popularity Measure)\n## this is a comment\n## this calculation might be useful later\n7 * 42\n#> [1] 294"},{"path":"intro.html","id":"chapexercise-1","chapter":"2 Getting Started with R and R Studio","heading":"2.7 Chapter Exercises","text":"Note: Usually, exercises ask write code using week’s chapter reference. However, initial chapter, something little different.Open new .Rmd file (File -> New File -> R Markdown -> OK) delete text explaining R Markdown lines 10 . , complete following exercises.Exercise 1. Read short paper https://joss.theoj.org/papers/10.21105/joss.01686 Introduction tidyverse, answer questions R Markdown file. ’m imagining whole exercise take ~ 20-25 minutes.Answer following questions typing answers .Rmd document. need make new code chunks, questions don’t ask coding!two major areas tidyverse doesn’t provide tools ?two major areas tidyverse doesn’t provide tools ?authors define “tidy?”authors define “tidy?”mean tidyverse “human-centred?”mean tidyverse “human-centred?”2 sentences, describe data science “cycle” given diagram top page 3.2 sentences, describe data science “cycle” given diagram top page 3.Exercise 2. may continue use .Rmd file answer questions. question, type answer new line, line space answers. questions answered outside code chunks since answers text, code.name class year (first-year, sophomore, junior, senior)?name class year (first-year, sophomore, junior, senior)?/major(s) minor(s), either actual intended?/major(s) minor(s), either actual intended?taking course? (Major requirement?, Minor requirement?, recommended advisor student?, exploring field?, etc.).taking course? (Major requirement?, Minor requirement?, recommended advisor student?, exploring field?, etc.).semester year take STAT 113 professor?semester year take STAT 113 professor?taken STAT 213? taken CS 140?taken STAT 213? taken CS 140?hometown: city, state, country?hometown: city, state, country?play sport campus? , sport? , activity -campus?play sport campus? , sport? , activity -campus?favorite TV show movie band/musical artist?favorite TV show movie band/musical artist?Tell something .Tell something .Take look learning outcomes listed syllabus. excited ?Take look learning outcomes listed syllabus. excited ?expectations class /hope gain class?expectations class /hope gain class?Knit .Rmd file .html file submit knitted .html file Sakai. file won’t knit, submit .Rmd file instead. submit either file, first need get file server onto computer can upload Sakai. Use following steps :Click checkbox next knitted .html file.Click checkbox next knitted .html file.Click Gear Icon “” -> ExportClick Gear Icon “” -> ExportIf like, rename file something like Week0_YOURLASTNAME.html, , make sure keep correct extension (either .html .Rmd).like, rename file something like Week0_YOURLASTNAME.html, , make sure keep correct extension (either .html .Rmd).export , file appear downloads folder. Now, go Sakai -> Assignments -> Week 0 Exercises complete upload process.export , file appear downloads folder. Now, go Sakai -> Assignments -> Week 0 Exercises complete upload process.Nice work: dive ggplot() ggplot2 package next!","code":""},{"path":"intro.html","id":"solutions-1","chapter":"2 Getting Started with R and R Studio","heading":"2.8 Exercise Solutions","text":"sections, exercise solutions posted end section. However, introduction, coding exercises class make sure start well.","code":""},{"path":"ggplot2.html","id":"ggplot2","chapter":"3 Plotting with ggplot2","heading":"3 Plotting with ggplot2","text":"Goals:Use ggplot2 package make exploratory plots STAT 113 single quantitative variable, two quantitative variables, quantitative categorical variable, single categorical variable, two categorical variables.Use ggplot2 package make exploratory plots STAT 113 single quantitative variable, two quantitative variables, quantitative categorical variable, single categorical variable, two categorical variables.Use plots produced answer questions Presidential election data set Fitness data set.Use plots produced answer questions Presidential election data set Fitness data set.practice running code R.practice running code R.","code":""},{"path":"ggplot2.html","id":"introduction-and-basic-terminology","chapter":"3 Plotting with ggplot2","heading":"3.1 Introduction and Basic Terminology","text":"begin data science journey plotting ggplot2 package. starting plotting couple reasons:Plotting cool! get see immediate result coding efforts form nice--look-plot.Plotting cool! get see immediate result coding efforts form nice--look-plot.exploratory data analysis, typically start making plots data.exploratory data analysis, typically start making plots data.Plotting can lead us ask subsequently investigate interesting questions, see first example.Plotting can lead us ask subsequently investigate interesting questions, see first example.first use data set 2000 United States Presidential election former President George Bush Al Gore obtained http://www.econometrics.com/intro/votes.htm. unfamiliar U.S. political elections, enough know state allocated certain number “electoral votes” president: states award electoral votes candidate receives ballots state. can read strange system Wikipedia.Florida typically highly-contentious “battleground” state. data set following variables, recorded 67 counties Florida:Gore, number people voted Al Gore 2000Bush, number people voted George Bush 2000Buchanan, number people voted third-party candidate BuchananNader, number people voted third-party candidate NaderOther, number people voted candidate previous 4 listedCounty, name county FloridaTo get started exploring data, complete following steps learned Week 0:Log-SLU R Studio server http://rstudio.stlawu.local:8787Log-SLU R Studio server http://rstudio.stlawu.local:8787Create new .Rmd file folder Notes R Project using File -> New File -> R Markdown.Create new .Rmd file folder Notes R Project using File -> New File -> R Markdown.Finally, read name data set pres_df, take look data set running head(pres_df) line, shows first observations data set:Finally, read name data set pres_df, take look data set running head(pres_df) line, shows first observations data set:Pay special attention variable names: ’ll need use names make plots. , R case-sensitive, meaning , example, need use Gore, gore.trying go light technical code terminology start (come back things later semester). terminology make lot sense ’ve actually worked data. , three terms thrown around quite bit next weeks: function, argument, object.function R always* (*always class) followed open ( ended closed ). non-technical terms, function something inputs often analogous English verb. example, mean() function calculates mean, rank() functions ranks variable lowest highest, labs() used add labels plot. Every function help file can accessed typing ?name_of_function. Try typing ?mean lower left window.function R always* (*always class) followed open ( ended closed ). non-technical terms, function something inputs often analogous English verb. example, mean() function calculates mean, rank() functions ranks variable lowest highest, labs() used add labels plot. Every function help file can accessed typing ?name_of_function. Try typing ?mean lower left window.argument something goes inside parentheses function. Arguments include objects, might . bottom-left window, type ?mean view Help file R function. see mean() 3 arguments: x, R object, trim, na.rm. trim = 0 default, means , default, R trim numbers computing mean.argument something goes inside parentheses function. Arguments include objects, might . bottom-left window, type ?mean view Help file R function. see mean() 3 arguments: x, R object, trim, na.rm. trim = 0 default, means , default, R trim numbers computing mean.object something created R, usually <-. , looking code read data, pres_df R object.object something created R, usually <-. , looking code read data, pres_df R object.make sense go first couple weeks.","code":"\nlibrary(tidyverse)\npres_df <- read_table(\"data/PRES2000.txt\") \n## don't worry about the `read_table` function....yet\nhead(pres_df)\n#> # A tibble: 6 x 6\n#>     Gore   Bush Buchanan Nader Other County  \n#>    <dbl>  <dbl>    <dbl> <dbl> <dbl> <chr>   \n#> 1  47365  34124      263  3226   751 ALACHUA \n#> 2   2392   5610       73    53    26 BAKER   \n#> 3  18850  38637      248   828   242 BAY     \n#> 4   3075   5414       65    84    35 BRADFORD\n#> 5  97318 115185      570  4470   852 BREVARD \n#> 6 386561 177323      788  7101  1623 BROWAR"},{"path":"ggplot2.html","id":"basic-plot-structure","chapter":"3 Plotting with ggplot2","heading":"3.2 Basic Plot Structure","text":"use ggplot() function ggplot2 package construct visualizations data. ggplot() function 3 basic components:data argument, specifying name data set (pres_df )mapping argument, specifying specifies aesthetics plot (aes()). Common aesthetics x position, y position, colour, size, shape, group, fill.geom_    () component, specifying geometric shape used display data.components combined following form:structure ggplot() plots based Grammar Graphics https://www.springer.com/gp/book/9780387245447. new things, components easier think examples.","code":"ggplot(data = name_of_data, mapping = aes(x = name_of_x_var, \n                                          y = name_of_y_var,\n                                          colour = name_of_colour_var,\n                                          etc.)) +\n  geom_nameofgeom() +\n  .....<other stuff>"},{"path":"ggplot2.html","id":"graphing-a-single-variable","chapter":"3 Plotting with ggplot2","heading":"3.3 Graphing a Single Variable","text":"","code":""},{"path":"ggplot2.html","id":"histograms-and-frequency-plots-for-a-quantitative-variable","chapter":"3 Plotting with ggplot2","heading":"3.3.1 Histograms and Frequency Plots for a Quantitative Variable","text":"Let’s go ahead begin exploration data making histogram number people voted Gore county. Recall histogram useful like graph single quantitative variable. Copy following code R chunk run code:1e+05, 2e+05, etc. labels x-axis mean?R gives us message “Pick better value binwidth” instead default bins = 30. Add , bins = 15 inside parentheses geom_histogram() change number bins histogram.Change colour inside bins “darkred.” think colour inside bins maps colour fill? Try !couple observations high vote values. explain large outliers?Another graph useful visualizing single quantitative variable frequency plot. code make frequency plot given . simply replacing geom_histogram() geom_freqpoly().frequency plot just like histogram counts connected line instead represented bins. can see relate including geom_freqpoly() geom_histogram() plot, though doesn’t make prettiest graph:","code":"\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_histogram(colour = \"black\", fill = \"white\") +\n  xlab(\"Votes for Gore in Florida\")\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`.\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_freqpoly(colour = \"black\") +\n  xlab(\"Votes for Gore in Florida\") \n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`.\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_freqpoly(colour = \"black\") +\n  xlab(\"Votes for Gore in Florida\") +\n  geom_histogram() \n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`.\n#> `stat_bin()` using `bins = 30`. Pick better value with\n#> `binwidth`."},{"path":"ggplot2.html","id":"r-code-style","chapter":"3 Plotting with ggplot2","heading":"3.3.2 R Code Style","text":"want code readable possible. benefits people may read code (like ), also benefits , particularly read code future. try follow Style Guide Advanced R book: http://adv-r..co.nz/Style.html. Feel free skim , don’t need worry much: able pick important elements just going course. might actually end better code style haven’t previous coding experience.quick example code style can important, consider following two code chunks, produce graph.code chunk want read two years now? code chunk want classmate/friend/coworker read? (assuming like classmate/friend/coworker….)","code":"\nggplot(data=pres_df,mapping=aes(x=Gore))+geom_histogram(colour=\"black\",fill=\"white\")+\n  xlab(\"Votes for Gore in Florida\")\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_histogram(colour = \"black\", fill = \"white\") +\n  xlab(\"Votes for Gore in Florida\")"},{"path":"ggplot2.html","id":"bar-plots-for-a-categorical-variable","chapter":"3 Plotting with ggplot2","heading":"3.3.3 Bar Plots for a Categorical Variable","text":"Recall STAT 113 bar plots useful want examine distribution one categorical variable. Side--side bar plots stacked bar plots plots useful looking relationship two categorical variables. actually aren’t categorical variables interesting plot data set, ’ll make one, called winner using code don’t need understand next week. winner \"Gore\" Gore won county \"Bush\" Bush won county. ’ll name new data set pres_cat.Using data set, can make bar plot geom_bar(). beauty ggplot() code super-similar used histograms frequency plots!Note , sometimes, data format one column contains levels categorical variable another column contains counts directly. example, can create data set using code learn next week:data set just two observations contains column two major presidential candidates column number counties candidate won. wanted make barplot showing number wins candidate, can’t use geom_bar(). Predict result running following code.Instead, can use geom_col(), takes x aesthetic giving column names levels categorical variable, y aesthetic giving column counts:","code":"\npres_cat <- pres_df %>% mutate(winner = if_else(Gore > Bush,\n                                                true = \"Gore\",\n                                                false = \"Bush\"))\npres_cat\n#> # A tibble: 67 x 7\n#>      Gore   Bush Buchanan Nader Other County    winner\n#>     <dbl>  <dbl>    <dbl> <dbl> <dbl> <chr>     <chr> \n#>  1  47365  34124      263  3226   751 ALACHUA   Gore  \n#>  2   2392   5610       73    53    26 BAKER     Bush  \n#>  3  18850  38637      248   828   242 BAY       Bush  \n#>  4   3075   5414       65    84    35 BRADFORD  Bush  \n#>  5  97318 115185      570  4470   852 BREVARD   Bush  \n#>  6 386561 177323      788  7101  1623 BROWAR    Gore  \n#>  7   2155   2873       90    39    17 CALHOUN   Bush  \n#>  8  29645  35426      182  1462   181 CHARLOTTE Bush  \n#>  9  25525  29765      270  1379   261 CITRUS    Bush  \n#> 10  14632  41736      186   562   237 CLAY      Bush  \n#> # … with 57 more rows\nggplot(data = pres_cat, aes(x = winner)) +\n  geom_bar()\npres_cat2 <- pres_cat %>% group_by(winner) %>%\n  summarise(nwins = n())\npres_cat2\n#> # A tibble: 2 x 2\n#>   winner nwins\n#>   <chr>  <int>\n#> 1 Bush      51\n#> 2 Gore      16\nggplot(pres_cat2, aes(x = winner)) +\n  geom_bar()\nggplot(pres_cat2, aes(x = winner, y = nwins)) +\n  geom_col()"},{"path":"ggplot2.html","id":"exercise-2-1","chapter":"3 Plotting with ggplot2","heading":"3.3.4 Exercises","text":"Exercises marked * indicate exercise solution end chapter 3.7.Change frequency plot plot number votes Bush instead number Gore. obvious outliers Bush frequency plot?Change frequency plot plot number votes Bush instead number Gore. obvious outliers Bush frequency plot?preference histograms preference frequency plots? Can think situation one desirable ?preference histograms preference frequency plots? Can think situation one desirable ?looks like Bush won lot ….necessarily mean Bush won votes total Florida? ?looks like Bush won lot ….necessarily mean Bush won votes total Florida? ?using survey data STAT 113 2018-2019 academic year many exercises section. may taken STAT 113 AP credit another reason, STAT 113 survey given students STAT 113 across sections. analyses Intro Stat carried using survey.data set contains following variables:Year, FirstYear, Sophomore, Junior, SeniorSex, M F (data set, Sex considered binary).Hgt, height, inches.Wgt, weight, pounds.Haircut, much paid haircut, typically.GPAExercise, amount hours exercise typical week.Sport, whether student plays varsity sport.TV, amount hours spent watching TV typical week.Award, Award preferred: choices Olympic Medal, Nobel Prize, Academy Award.Pulse, pulse rate, beats per minute.SocialMedia, used social media platform (Instagram, SnapChat, FaceBook, Twitter, , None).* Create histogram Exercise variable, change x-axis label “Exercise (hours per typical week),” change number bins 14, change fill bins “lightpink2” outline colour bins black.* Create histogram Exercise variable, change x-axis label “Exercise (hours per typical week),” change number bins 14, change fill bins “lightpink2” outline colour bins black.* can change y-axis histogram “density” instead raw count. means bar shows proportion cases instead raw count. Google something like “geom_histogram density” figure create y aes() show density instead count.* can change y-axis histogram “density” instead raw count. means bar shows proportion cases instead raw count. Google something like “geom_histogram density” figure create y aes() show density instead count.Construct histogram using quantitative variable choice. Change fill colour using http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf help choose colours.Construct histogram using quantitative variable choice. Change fill colour using http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf help choose colours.Construct bar plot variable choosing. find?Construct bar plot variable choosing. find?format STAT 113 data set need construct bar plot geom_col() instead geom_bar()?format STAT 113 data set need construct bar plot geom_col() instead geom_bar()?","code":"\nlibrary(tidyverse)\nstat113_df <- read_csv(\"data/stat113.csv\")\nhead(stat113_df)\n#> # A tibble: 6 x 12\n#>   Year  Sex     Hgt   Wgt Haircut   GPA Exercise Sport    TV\n#>   <chr> <chr> <dbl> <dbl>   <dbl> <dbl>    <dbl> <chr> <dbl>\n#> 1 Soph… M        66   155       0  2.9        15 Yes       8\n#> 2 Firs… F        69   170      17  3.87       14 Yes      12\n#> 3 Firs… F        64   130      40  3.3         5 No        5\n#> 4 Firs… M        68   157      35  3.21       10 Yes      15\n#> 5 Firs… M        72   175      20  3.1         2 No        5\n#> 6 Juni… F        62   150      50  3.3         8 Yes       5\n#> # … with 3 more variables: Award <chr>, Pulse <dbl>,\n#> #   SocialMedia <chr>"},{"path":"ggplot2.html","id":"graphing-two-quantitative-variables-faceting-and-aes-options","chapter":"3 Plotting with ggplot2","heading":"3.4 Graphing Two Quantitative Variables, Faceting, and aes() Options","text":"","code":""},{"path":"ggplot2.html","id":"scatterplots","chapter":"3 Plotting with ggplot2","heading":"3.4.1 Scatterplots","text":"Moving back 2000 presidential election data set, thus far, ’ve figured couple counties large numbers votes Gore large number votes Bush. don’t know reason (counties democratic, republican, counties just populous). counties large number votes Bush also tend large number votes Gore? candidates: interesting patterns?Let’s start making scatterplot number votes Gore number votes Bush. Note geom_ making scatterplot called geom_point() adding layer points plot.patterns see scatterplot?Now, change x variable Gore Buchanan. notice something strange scatterplot. Try come one explanation outlying point many votes Buchanan.trying come explanation, nice figure Florida county outlying point nice knew something Florida counties. remedy first issue, recall can type View(pres_df) pull data set. new window open, click column heading Buchanan sort votes Buchanan high low figure county outlier.Use Google sleuthing skills find explanation: try search “2000 united states presidential election [name outlier county].” Write sentence find. Hint: nothing useful pops , try adding term “butterfly ballot” search.used 2000 Presidential data set find something really interesting! particular, used exploratory data analysis examine data set, without specific question interest want answer. type exploring often really useful, drawbacks, discuss later semester.","code":"\nggplot(data = pres_df, mapping = aes(x = Gore, y = Bush)) +\n  geom_point()"},{"path":"ggplot2.html","id":"aesthetics-in-aes","chapter":"3 Plotting with ggplot2","heading":"3.4.2 Aesthetics in aes()","text":"remainder chapter, work fitness data collected Apple Watch since November 2018. higham_fitness_clean.csv contains information following variables:Start, month, day, year fitness data recorded onmonth, monthweekday, day weekdayofyear, day year (304 corresponds 304th day year)distance, distance walked milessteps, number steps takenflights, number flights stairs climbedactive_cals, number calories burned activitystepgoal, whether reached 10,000 steps dayweekend_ind, variable whether day week weekend day (Saturday Sunday) weekday (Monday - Friday).First, let’s make basic scatterplot illustrate ’s important plot data. ’ll use variable distance x-variable active_cals y-variable.One aspect plot may notice observations burned 0 active calories, yet walked/jogged/ran/moved distance. possible burn calories move ~ 4 miles? Probably , let’s drop observations data set make note dropped observations. Unfortunately, don’t tools yet, just run following chunk code without worrying much syntax.Let’s make plot fitness data set instead fitness_full see outliers actually gone. time, put aes() geom_point() function:Putting aes() ggplot() putting aes() geom_point() results graph case. put aes() ggplot(), R perpetuates aes() aesthetics geom_s plotting command. However, put aes() geom_point(), future geoms use need re-specify different aes(). ’ll see example exercises.aes() OptionsIn addition x y, can also use aes() map variables things like colour, size, shape. example, might make scatterplot Start x-axis (date) active_cals y-axis, colouring whether day week weekend.anything useful notice plot? anything plot improved?Instead using colour, can also specify point shape. useful, example, printing something black white.prefer colour shape? ?Finally, another common aes() size. example, make size points scatterplot change depending many flights stairs climbed.don’t think previous three plots necessarily “best” need work, , part fun exploratory data analysis making trying different plots see “works.”Inside vs Outside aes()’ve changed colour points correspond weekend_ind, just wanted change colour points colour, \"purple\". Try running following code chunk:graph look like? expected?Putting colour = ____ inside aes() outside aes() achieves different things. general,want map something data set (fitness) something plot (x, y, colour, size, etc.), put inside aes() geom_point(aes(colour = weekend_ind)).want map something data set (fitness) something plot (x, y, colour, size, etc.), put inside aes() geom_point(aes(colour = weekend_ind)).assign fixed characteristics don’t come data, put outside aes(), geom_point(colour = \"purple\").assign fixed characteristics don’t come data, put outside aes(), geom_point(colour = \"purple\").can also change overall point size shape. standard size 1 following code chunk makes points bigger. standard shape 19: can try changing integers see shapes can get.","code":"\nlibrary(tidyverse)\nfitness_full <- read_csv(\"data/higham_fitness_clean.csv\") %>% mutate(weekend_ind = case_when(weekday == \"Sat\" | weekday == \"Sun\" ~ \"weekend\",\n  TRUE ~ \"weekday\"))\n#> \n#> ── Column specification ────────────────────────────────────\n#> cols(\n#>   Start = col_date(format = \"\"),\n#>   month = col_character(),\n#>   weekday = col_character(),\n#>   dayofyear = col_double(),\n#>   distance = col_double(),\n#>   steps = col_double(),\n#>   flights = col_double(),\n#>   active_cals = col_double(),\n#>   stepgoal = col_character()\n#> )\nggplot(data = fitness_full, aes(x = distance, y = active_cals)) +\n  geom_point()\n## drop observations that have active calories < 50. \n## assuming that these are data errors or \n## days where the Apple Watch wasn't worn.\nfitness <- fitness_full %>%\n  filter(active_cals > 50)\nggplot(data = fitness) +\n  geom_point(aes(x = distance, y = active_cals))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, colour = weekend_ind))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, shape = weekend_ind))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, size = flights))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, colour = \"purple\"))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals), size = 1.5, shape = 19)"},{"path":"ggplot2.html","id":"using-more-than-one-geom","chapter":"3 Plotting with ggplot2","heading":"3.4.3 Using More Than One geom()","text":"might also interested fitting smooth curve scatterplot. want put one “geom” plot, can use multiple geoms. Since want aes() apply geom_point() geom_smooth(), going move aes() command overall ggplot() line code:Within geom_smooth(), can set se = FALSE get rid grey standard errors around lines, can setmethod = \"lm\" fit straight linear regression lines instead smooth curves:look like increasing overall trend? decreasing? make sense use line model relationship prefer smooth curve?","code":"\nggplot(data = fitness, aes(x = Start, y = active_cals)) +\n  geom_point() +\n  geom_smooth()\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\nggplot(data = fitness, aes(x = Start, y = active_cals)) +\n  geom_point() +\n  geom_smooth(se = FALSE, method = \"lm\")\n#> `geom_smooth()` using formula 'y ~ x'"},{"path":"ggplot2.html","id":"line-plots-with-geom_line","chapter":"3 Plotting with ggplot2","heading":"3.4.4 Line Plots with geom_line()","text":"Line plots often useful quantitative variable ’d like explore time. y-axis quantitative variable x-axis typically time. generally, line plots often used x-axis variable one discrete value y-axis variable. example, suppose want explore step count changed time past couple years. Compare standard scatterplot following line plot: prefer?Can spot start pandemic graph? seemed happen step count?","code":"\nggplot(data = fitness, mapping = aes(x = Start, y = steps)) +\n  geom_point() + geom_smooth() + xlab(\"Date\")\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\nggplot(data = fitness, mapping = aes(x = Start, y = steps)) +\n  geom_line() + geom_smooth() + xlab(\"Date\")\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'"},{"path":"ggplot2.html","id":"faceting","chapter":"3 Plotting with ggplot2","heading":"3.4.5 Faceting","text":"Using colour colour points different levels categorical variable generally fine just couple levels /little overlap among levels. , lot two categories colour . example, let’s move back STAT 113 survey data set investigate relationship Pulse Exercise different class Year’s. might hypothesize students get exercise tend lower pulse rates.many different categories categorical variable (4 categories Year, particular plot still bit difficult read), can sometimes useful facet plot variable instead trying use different colours shapes.eliminated colour = argument added facet_wrap( ~ name_of_facet_variable). creates different scatterplot smooth line level name_of_facet_variable.can see plot harder see plot colour?data seem support hypothesis exercise associated lower pulse rates sample students?","code":"\nggplot(data = stat113_df, aes(x = Exercise, y = Pulse,\n                           colour = Year)) +\n  geom_point() +\n  geom_smooth(se = TRUE)\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\n#> Warning: Removed 40 rows containing non-finite values\n#> (stat_smooth).\n#> Warning: Removed 40 rows containing missing values\n#> (geom_point).\nggplot(data = stat113_df, aes(x = Exercise, y = Pulse)) +\n  geom_point() +\n  geom_smooth(se = TRUE) +\n  facet_wrap(~ Year)\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\n#> Warning: Removed 40 rows containing non-finite values\n#> (stat_smooth).\n#> Warning: Removed 40 rows containing missing values\n#> (geom_point)."},{"path":"ggplot2.html","id":"exercise-2-2","chapter":"3 Plotting with ggplot2","heading":"3.4.6 Exercises","text":"Exercises marked * indicate exercise solution end chapter 3.7.Fix code chunk tried specify colour points purple actually make points “purple” moving colour = \"purple\" outside parentheses aes() (still inside geom_point()).Fix code chunk tried specify colour points purple actually make points “purple” moving colour = \"purple\" outside parentheses aes() (still inside geom_point()).console (bottom-left) window, type ?geom_smooth scroll “Arguments.” Find span, read , , within geom_smooth() argument line plot steps vs. date, add span argument make smooth line wigglier.console (bottom-left) window, type ?geom_smooth scroll “Arguments.” Find span, read , , within geom_smooth() argument line plot steps vs. date, add span argument make smooth line wigglier.Explain doesn’t make sense construct line plot Exercise vs. GPA.Explain doesn’t make sense construct line plot Exercise vs. GPA.* Make scatterplot Hgt y-axis Wgt x-axis, colouring Sport. Add smooth fitted curve scatterplot. , move colour = Sport aes() ggplot() function aes() geom_point() function. changes plot? Can give explanation change occurs?* Make scatterplot Hgt y-axis Wgt x-axis, colouring Sport. Add smooth fitted curve scatterplot. , move colour = Sport aes() ggplot() function aes() geom_point() function. changes plot? Can give explanation change occurs?* Faceting can used types plots ! Make pair faceted histograms quantitative variable choosing faceted categorical variable choosing.* Faceting can used types plots ! Make pair faceted histograms quantitative variable choosing faceted categorical variable choosing.","code":""},{"path":"ggplot2.html","id":"boxplots-stacked-barplots-and-others","chapter":"3 Plotting with ggplot2","heading":"3.5 Boxplots, Stacked Barplots and Others","text":"common geoms useful throughout semester. skim surface: ’ll come back plotting weeks, ’re able data wrangling reshaping.","code":""},{"path":"ggplot2.html","id":"graphing-a-quant.-variable-vs.-a-cat.-variable","chapter":"3 Plotting with ggplot2","heading":"3.5.1 Graphing a Quant. Variable vs. a Cat. Variable","text":"Another common plot used Intro Stat courses boxplot. Side--side boxplots particularly useful want compare quantitative response variable across two levels categorical variable. Let’s stick STAT 113 survey data examine relationship Exercise Award preference.can conclude plot?alternative side--side boxplots violin plots:Read Violin plots typing ?geom_violin console (bottom-left window). different boxplots?","code":"\nggplot(data = stat113_df, aes(x = Award, y = Exercise)) +\n  geom_boxplot()\n#> Warning: Removed 7 rows containing non-finite values\n#> (stat_boxplot).\nggplot(data = stat113_df, aes(x = Award, y = Exercise)) +\n  geom_violin()\n#> Warning: Removed 7 rows containing non-finite values\n#> (stat_ydensity)."},{"path":"ggplot2.html","id":"graphing-two-categorical-variables","chapter":"3 Plotting with ggplot2","heading":"3.5.2 Graphing Two Categorical Variables","text":"combination two variables yet explore two variables categorical. Let’s look relationship Year SocialMedia first using stacked bar plot.make graph, specify position = \"fill\" bars “filled” stepgoal.patterns notice plot? anything plot improved?","code":"\nggplot(data = stat113_df, aes(x = Year, fill = SocialMedia)) +\n  geom_bar(position = \"fill\") +\n  ylab(\"Proportion\")"},{"path":"ggplot2.html","id":"exercise-2-3","chapter":"3 Plotting with ggplot2","heading":"3.5.3 Exercises","text":"Exercises marked * indicate exercise solution end chapter 3.7.* Change colour inside boxplots Exercise vs. Award graph \"blue\". think ’ll use colour = \"blue\" fill = \"blue\"?* Change colour inside boxplots Exercise vs. Award graph \"blue\". think ’ll use colour = \"blue\" fill = \"blue\"?* Create side--side boxplot compares GPAs students prefer different Awards. change fill boxplot colour choice. notice plot?* Create side--side boxplot compares GPAs students prefer different Awards. change fill boxplot colour choice. notice plot?* making previous plot, R gives us warning message “Removed 70 rows containing non-finite values.” R’s robotic way telling us 70 GPA values missing data set. Use know data collected (Fall Spring semester 2018-2019 school-year) guess missing.* making previous plot, R gives us warning message “Removed 70 rows containing non-finite values.” R’s robotic way telling us 70 GPA values missing data set. Use know data collected (Fall Spring semester 2018-2019 school-year) guess missing.* Make stacked bar plot two variables choosing STAT 113 data set. Comment something notice plot.* Make stacked bar plot two variables choosing STAT 113 data set. Comment something notice plot.","code":""},{"path":"ggplot2.html","id":"chapexercise-2","chapter":"3 Plotting with ggplot2","heading":"3.6 Chapter Exercises","text":"Exercises marked * indicate exercise solution end chapter 3.7.* default geom_smooth() use LOESS (locally estimated scatterplot smoothing). Read LOESS : . Write one two sentences explaining LOESS .* default geom_smooth() use LOESS (locally estimated scatterplot smoothing). Read LOESS : . Write one two sentences explaining LOESS .* Thus far, faceted single variable. Use Google figure facet two variables make plot shows relationship GPA (y-axis) Exercise (x-axis) four facets: one male students play sport, one female students play sport, one male students play sport, one female students play sport.* Thus far, faceted single variable. Use Google figure facet two variables make plot shows relationship GPA (y-axis) Exercise (x-axis) four facets: one male students play sport, one female students play sport, one male students play sport, one female students play sport.* Intro-Stat, boxplots typically introduced using * symbol identify outliers. Using combination help ?geom_boxplot Googling “R point shapes,” figure modify side--side boxplots outliers shown using *, default dots.* Intro-Stat, boxplots typically introduced using * symbol identify outliers. Using combination help ?geom_boxplot Googling “R point shapes,” figure modify side--side boxplots outliers shown using *, default dots., using Google, figure add mean boxplot “darkgreen” diamond-shaped symbol stat_summary().common theme ’ll see throughout course ’s advantageous know much background information possible data set analyzing. Data sets easier analyze pose questions ’re familiar subject matter.Give example something know STAT 113 survey data set helped answer pose question someone another university (therefore unfamiliar intro stat course) wouldn’t know.Give example something don’t know fitness data set person owns fitness data know. give advantage person familiar fitness data?","code":""},{"path":"ggplot2.html","id":"solutions-2","chapter":"3 Plotting with ggplot2","heading":"3.7 Exercise Solutions","text":"","code":""},{"path":"ggplot2.html","id":"introduction-etc.-s","chapter":"3 Plotting with ggplot2","heading":"3.7.1 Introduction etc. S","text":"","code":""},{"path":"ggplot2.html","id":"basic-plot-structure-s","chapter":"3 Plotting with ggplot2","heading":"3.7.2 Basic Plot Structure S","text":"","code":""},{"path":"ggplot2.html","id":"graphing-a-single-variable-s","chapter":"3 Plotting with ggplot2","heading":"3.7.3 Graphing a Single Variable S","text":"* Create histogram Exercise variable, change x-axis label “Exercise (hours per typical week),” change number bins 14, change fill bins “lightpink2” outline colour bins black.* can change y-axis histogram “density” instead raw count. means bar shows proportion cases instead raw count. Google something like “geom_histogram density” figure create y aes() show density instead count.","code":"\nggplot(data = stat113_df, aes(x = Exercise)) +\n  geom_histogram(bins = 14, fill = \"lightpink2\", colour = \"black\") +\n  xlab(\"Exercise (hours per typical week)\")\n#> Warning: Removed 7 rows containing non-finite values\n#> (stat_bin).\nggplot(data = stat113_df, aes(x = Exercise, y = ..density..)) +\n  geom_histogram(bins = 14, fill = \"lightpink2\", colour = \"black\") +\n  xlab(\"Exercise (hours per typical week)\")\n#> Warning: Removed 7 rows containing non-finite values\n#> (stat_bin)."},{"path":"ggplot2.html","id":"graphing-two-quant.-etc.-s","chapter":"3 Plotting with ggplot2","heading":"3.7.4 Graphing Two Quant. etc. S","text":"* Make scatterplot Hgt y-axis Wgt x-axis, colouring Sport. Add smooth fitted curve scatterplot. , move colour = Sport aes() ggplot() function aes() geom_point() function. changes plot? Can give explanation change occurs?points now coloured Sport one smooth fitted line. makes sense geom_point() now two global aesthetics x y, well colour aesthetic. geom_smooth() longer colour aesthetic still inherits two global aesthetics, x y.* Faceting can used types plots ! Make pair faceted histograms quantitative variable choosing faceted categorical variable choosing.Answers vary:","code":"\nggplot(data = stat113_df, aes(x = Wgt, y = Hgt, colour = Sport)) +\n  geom_point() +\n  geom_smooth()\n\nggplot(data = stat113_df, aes(x = Wgt, y = Hgt)) +\n  geom_point(aes(colour = Sport)) +\n  geom_smooth()\nggplot(data = stat113_df, aes(x = GPA)) + \n  geom_histogram(bins = 15) +\n  facet_wrap( ~ Sport)"},{"path":"ggplot2.html","id":"boxplots-stacked-etc.-s","chapter":"3 Plotting with ggplot2","heading":"3.7.5 Boxplots, Stacked, etc. S","text":"* Change colour inside boxplots Exercise vs. Award graph \"blue\". think ’ll use colour = \"blue\" fill = \"blue\"?fill ’s inside boxplots want modify. colour modify outline colour.* Create side--side boxplot compares GPAs students prefer different Awards. change fill boxplot colour choice. notice plot?outlier students, three groups overall seem similar GPAs.* making previous plot, R gives us warning message “Removed 70 rows containing non-finite values.” R’s robotic way telling us 70 GPA values missing data set. Use know data collected (Fall Spring semeseter 2018-2019 school-year) guess missing.STAT 113 first-year students: first-years taking course fall GPA report. Additionally, another reason might student chose report GPA.* Make stacked bar plot two variables choosing STAT 113 data set. Comment something notice plot.Answers vary.might expect, seem like higher proportion students play sport prefer win Olympic medal, compared students play sport.","code":"\nggplot(data = stat113_df, aes(x = Award, y = Exercise)) +\n  geom_boxplot(fill = \"blue\")\n#> Warning: Removed 7 rows containing non-finite values\n#> (stat_boxplot).\nggplot(data = stat113_df, aes(x = Award, y = GPA)) +\n  geom_boxplot(fill = \"lightpink1\")\n#> Warning: Removed 70 rows containing non-finite values\n#> (stat_boxplot).\nggplot(data = stat113_df, aes(x = Sport, fill = Award)) +\n  geom_bar(position = \"fill\")"},{"path":"ggplot2.html","id":"chapexercise-2-S","chapter":"3 Plotting with ggplot2","heading":"3.7.6 Chapter Exercises S","text":"* default geom_smooth() use LOESS (locally estimated scatterplot smoothing). Read LOESS : . Write one two sentences explaining LOESS .Loess uses bunch local regressions predict y-variable point, giving weight observations near point interest x-axis. done every point, predictions connected smooth curve.* Thus far, faceted single variable. Use Google figure facet two variables make plot shows relationship GPA (y-axis) Exercise (x-axis) four facets: one male students play sport, one female students play sport, one male students play sport, one female students play sport.* Intro-Stat, boxplots typically introduced using * symbol identify outliers. Using combination help ?geom_boxplot Googling “R point shapes,” figure modify side--side boxplots outliers shown using *, default dots., using Google, figure add mean boxplot “darkgreen” diamond-shaped symbol stat_summary().","code":"\nggplot(data = stat113_df %>% filter(!is.na(Sport) & !is.na(Sex)),\n  aes(x = Exercise, y = GPA)) + \n  geom_point() + geom_smooth() +\n  facet_grid(Sex ~ Sport)\n#> `geom_smooth()` using method = 'loess' and formula 'y ~ x'\n#> Warning: Removed 71 rows containing non-finite values\n#> (stat_smooth).\n#> Warning: Removed 71 rows containing missing values\n#> (geom_point).\nggplot(data = stat113_df, aes(x = Sex, y = GPA)) +\n  geom_boxplot(fill = \"lightpink1\", outlier.shape = 8) +\n  stat_summary(fun = mean, shape = 18, colour = \"darkgreen\")\n#> Warning: Removed 70 rows containing non-finite values\n#> (stat_boxplot).\n#> Warning: Removed 70 rows containing non-finite values\n#> (stat_summary).\n#> Warning: Removed 3 rows containing missing values\n#> (geom_segment)."},{"path":"ggplot2.html","id":"rcode-2","chapter":"3 Plotting with ggplot2","heading":"3.8 Non-Exercise R Code","text":"","code":"\nlibrary(tidyverse)\npres_df <- read_table(\"data/PRES2000.txt\") \n## don't worry about the `read_table` function....yet\nhead(pres_df)\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_histogram(colour = \"black\", fill = \"white\") +\n  xlab(\"Votes for Gore in Florida\")\nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_freqpoly(colour = \"black\") +\n  xlab(\"Votes for Gore in Florida\") \nggplot(data = pres_df, mapping = aes(x = Gore)) +\n  geom_freqpoly(colour = \"black\") +\n  xlab(\"Votes for Gore in Florida\") +\n  geom_histogram() \npres_cat <- pres_df %>% mutate(winner = if_else(Gore > Bush,\n                                                true = \"Gore\",\n                                                false = \"Bush\"))\npres_cat\nggplot(data = pres_cat, aes(x = winner)) +\n  geom_bar()\npres_cat2 <- pres_cat %>% group_by(winner) %>%\n  summarise(nwins = n())\npres_cat2\nggplot(pres_cat2, aes(x = winner)) +\n  geom_bar()\nggplot(pres_cat2, aes(x = winner, y = nwins)) +\n  geom_col()\nggplot(data = pres_df, mapping = aes(x = Gore, y = Bush)) +\n  geom_point()\nlibrary(tidyverse)\nfitness_full <- read_csv(\"data/higham_fitness_clean.csv\") %>% mutate(weekend_ind = case_when(weekday == \"Sat\" | weekday == \"Sun\" ~ \"weekend\",\n  TRUE ~ \"weekday\"))\nggplot(data = fitness_full, aes(x = distance, y = active_cals)) +\n  geom_point()\n## drop observations that have active calories < 50. \n## assuming that these are data errors or \n## days where the Apple Watch wasn't worn.\nfitness <- fitness_full %>%\n  filter(active_cals > 50)\nggplot(data = fitness) +\n  geom_point(aes(x = distance, y = active_cals))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, colour = weekend_ind))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, shape = weekend_ind))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, size = flights))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals, colour = \"purple\"))\nggplot(data = fitness) +\n  geom_point(aes(x = Start, y = active_cals), size = 1.5, shape = 19)\nggplot(data = fitness, aes(x = Start, y = active_cals)) +\n  geom_point() +\n  geom_smooth()\nggplot(data = fitness, aes(x = Start, y = active_cals)) +\n  geom_point() +\n  geom_smooth(se = FALSE, method = \"lm\")\nggplot(data = fitness, mapping = aes(x = Start, y = steps)) +\n  geom_point() + geom_smooth() + xlab(\"Date\")\nggplot(data = fitness, mapping = aes(x = Start, y = steps)) +\n  geom_line() + geom_smooth() + xlab(\"Date\")\nggplot(data = stat113_df, aes(x = Exercise, y = Pulse,\n                           colour = Year)) +\n  geom_point() +\n  geom_smooth(se = TRUE)\nggplot(data = stat113_df, aes(x = Exercise, y = Pulse)) +\n  geom_point() +\n  geom_smooth(se = TRUE) +\n  facet_wrap(~ Year)\nggplot(data = stat113_df, aes(x = Award, y = Exercise)) +\n  geom_boxplot()\nggplot(data = stat113_df, aes(x = Award, y = Exercise)) +\n  geom_violin()\nggplot(data = stat113_df, aes(x = Year, fill = SocialMedia)) +\n  geom_bar(position = \"fill\") +\n  ylab(\"Proportion\")"},{"path":"dplyr.html","id":"dplyr","chapter":"4 Wrangling with dplyr","heading":"4 Wrangling with dplyr","text":"Goals:Use mutate(), if_else(), case_when() functions create new variables.Use mutate(), if_else(), case_when() functions create new variables.Use filter(), select(), arrange() functions dplyr choose certain rows keep get rid , choose certain columns keep get rid , sort data, respectively.Use filter(), select(), arrange() functions dplyr choose certain rows keep get rid , choose certain columns keep get rid , sort data, respectively.Use group_by() summarise() create useful summaries data set.Use group_by() summarise() create useful summaries data set.Combine goals plotting explore babynames data set data set SLU majors.Combine goals plotting explore babynames data set data set SLU majors.Throughout chapter, use babynames data set babynames R package. begin, read data set, runningand typing ?babynames bottom-left window R Studio. see data set contains baby name data provided SSA United States dating back 1880:second data set use 27 observations, one SLU’s majors contains 3 variables:Major, name major.nfemales, number female graduates major 2015 - 2019.nmales, number male graduates major 2015 - 2019.data kindly provided Dr. Ramler. Notes R Project open, can read data set withThere many interesting informative plots make either data set, require data wrangling first. chapter provide foundation wrangling skills.","code":"\nlibrary(babynames)\nhead(babynames)\n#> # A tibble: 6 x 5\n#>    year sex   name          n   prop\n#>   <dbl> <chr> <chr>     <int>  <dbl>\n#> 1  1880 F     Mary       7065 0.0724\n#> 2  1880 F     Anna       2604 0.0267\n#> 3  1880 F     Emma       2003 0.0205\n#> 4  1880 F     Elizabeth  1939 0.0199\n#> 5  1880 F     Minnie     1746 0.0179\n#> 6  1880 F     Margaret   1578 0.0162\nlibrary(tidyverse)\nslumajors_df <- read_csv(\"data/SLU_Majors_15_19.csv\")\nslumajors_df\n#> # A tibble: 27 x 3\n#>    Major                        nfemales nmales\n#>    <chr>                           <dbl>  <dbl>\n#>  1 Anthropology                       34     15\n#>  2 Art & Art History                  65     11\n#>  3 Biochemistry                       14     11\n#>  4 Biology                           162     67\n#>  5 Business in the Liberal Arts      135    251\n#>  6 Chemistry                          26     14\n#>  7 Computer Science                   21     47\n#>  8 Conservation Biology               38     20\n#>  9 Economics                         128    349\n#> 10 English                           131     54\n#> # … with 17 more rows"},{"path":"dplyr.html","id":"mutate-create-variables","chapter":"4 Wrangling with dplyr","heading":"4.1 mutate(): Create Variables","text":"Sometimes, want create new variable ’s data set, oftentimes using if_else(), case_when(), basic algebraic operations one columns already present data set.R understands following symbols:+ addition, - subtraction* multiplication, / division^ raising something power (3 ^ 2 equal 9)R also order operations usual: parentheses, exponents, multiplication division, addition subtraction.example, suppose want create variable slumajors_df total number students graduating major. can mutate():’s lot break code chunk: importantly, ’re seeing first many, many, many, many, many, many, many instances using %>% pipe! %>% operator approximately reads take slumajors_df “” mutate() .Piping really convenient, easy--read way build sequence commands. can read code :Take slumajors_df slumajors_df,Take slumajors_df slumajors_df,perform mutate() step create new variable called ntotal, nfemales plus nmales.perform mutate() step create new variable called ntotal, nfemales plus nmales.Since first time using mutate(), let’s also delve function . general, mutate() reads:mutate(name_of_new_variable = operations_on_old_variables).R just automatically assumes want operation every single row data set, often quite convenient!might also want create variable percentage students identifying female major:happened ntotal? still printout? ’s : created variable ntotal, didn’t actually save new data set anything. R makes prints new variable, doesn’t get saved data set. want save new data set, can use <- operator. , ’re saving new data set name old data set: slumajors_df. , ’re thing percfemale variable. won’t always want give new data set name old one: ’ll talk chapter exercises., can pipe many things together want , ’s probably easier just create variables one go. following chunk says “Take slumajors_df create new variable ntotal. new data set, create new variable called percfemale.” Finally, slumajors_df <- beginning says “save new data set data set name, slumajors_df.”","code":"\nslumajors_df %>% mutate(ntotal = nfemales + nmales)\n#> # A tibble: 27 x 4\n#>    Major                        nfemales nmales ntotal\n#>    <chr>                           <dbl>  <dbl>  <dbl>\n#>  1 Anthropology                       34     15     49\n#>  2 Art & Art History                  65     11     76\n#>  3 Biochemistry                       14     11     25\n#>  4 Biology                           162     67    229\n#>  5 Business in the Liberal Arts      135    251    386\n#>  6 Chemistry                          26     14     40\n#>  7 Computer Science                   21     47     68\n#>  8 Conservation Biology               38     20     58\n#>  9 Economics                         128    349    477\n#> 10 English                           131     54    185\n#> # … with 17 more rows\nslumajors_df %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))\n#> # A tibble: 27 x 4\n#>    Major                        nfemales nmales percfemale\n#>    <chr>                           <dbl>  <dbl>      <dbl>\n#>  1 Anthropology                       34     15       69.4\n#>  2 Art & Art History                  65     11       85.5\n#>  3 Biochemistry                       14     11       56  \n#>  4 Biology                           162     67       70.7\n#>  5 Business in the Liberal Arts      135    251       35.0\n#>  6 Chemistry                          26     14       65  \n#>  7 Computer Science                   21     47       30.9\n#>  8 Conservation Biology               38     20       65.5\n#>  9 Economics                         128    349       26.8\n#> 10 English                           131     54       70.8\n#> # … with 17 more rows\nslumajors_df <- slumajors_df %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))\nslumajors_df <- slumajors_df %>% mutate(ntotal = nfemales + nmales)\nslumajors_df <- slumajors_df %>%\n  mutate(ntotal = nfemales + nmales) %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))"},{"path":"dplyr.html","id":"a-little-more-on-piping","chapter":"4 Wrangling with dplyr","heading":"4.1.1 A Little More on Piping","text":"jumping straight using piping, want appreciation terrible life without . piping make whatever given %>% pipe first argument whatever function follows %>%. Sois equivalent toPiping really isn’t useful just something can done single %>%. , previous example without piping might look like:’s still bad aren’t many operations data set, ’s already much harder read. get examples using 5+ pipes.might also help use analogy thinking piping. Consider Ke$ha’s morning routine opening song Tik Tok. write morning routine terms piping,Kesha first wakes morning, Kesha woken grabs glasses, Kesha woken glasses brushes teeth, etc.","code":"\ndf %>% mutate(x = y + 4)\nmutate(df, x = y + 4)\nmutate(mutate(slumajors_df, ntotal = nfemales + nmales), percfemale = 100 * nfemales / (nfemales + nmales))\n#> # A tibble: 27 x 5\n#>    Major                   nfemales nmales percfemale ntotal\n#>    <chr>                      <dbl>  <dbl>      <dbl>  <dbl>\n#>  1 Anthropology                  34     15       69.4     49\n#>  2 Art & Art History             65     11       85.5     76\n#>  3 Biochemistry                  14     11       56       25\n#>  4 Biology                      162     67       70.7    229\n#>  5 Business in the Libera…      135    251       35.0    386\n#>  6 Chemistry                     26     14       65       40\n#>  7 Computer Science              21     47       30.9     68\n#>  8 Conservation Biology          38     20       65.5     58\n#>  9 Economics                    128    349       26.8    477\n#> 10 English                      131     54       70.8    185\n#> # … with 17 more rows\nkesha %>% wake_up(time = \"morning\", feels_like = \"P-Diddy\") %>%\n  grab(glasses) %>%\n  brush(teeth, item = \"jack\", unit = \"bottle\") %>% ...."},{"path":"dplyr.html","id":"if_else-and-case_when","chapter":"4 Wrangling with dplyr","heading":"4.1.2 if_else() and case_when()","text":"Suppose want make new variable conditional another variable (one variable) data set. typically use mutate() coupled withif_else() new variable created one conditioncase_when() new variable created one conditionSuppose want create new variable tells us whether Major majority Women. , want new variable, morewomen \"Yes\" Major 50% women \"\" 50% less.mutate() statement reads: create new variable called morewomen equal \"Yes\" percfemale > 50 true equal \"\" perfemale > 0.5. first argument condition, second name new variable condition holds, third name variable condition hold.use conditions time every day life. example, New York quarantine order stating people coming 22 states July 2020 need quarantine. terms condition, read “traveling New York one 22 states, need quarantine 2 weeks. Else, , don’t need quarantine.” trick using conditions R getting used syntax code.can see set one condition, ’d need use different function (use nested if_else() statements, can nightmare read). one condition creating new variable, use case_when().example, looking output, see Biochemistry 56% female graduates. ’s “” 50/50 split, suppose want variable called large_majority “female” percent women 70 , “male” percent women 30 less, “none” percent female 30 70.case_when() function reads “percent female equal 70, assign new variable large_majority value ”female“, ’s less equal 30, assign 30 less 70, assign variable value ”none\" .\" & boolean operator: ’ll talk later don’t worry much now.Let’s save two new variables slumajors_df:","code":"\nslumajors_df %>% mutate(morewomen = if_else(percfemale > 50,\n                                            true = \"Yes\",\n                                            false = \"No\"))\n#> # A tibble: 27 x 6\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Anthropology        34     15       69.4     49 Yes      \n#>  2 Art & Art Hi…       65     11       85.5     76 Yes      \n#>  3 Biochemistry        14     11       56       25 Yes      \n#>  4 Biology            162     67       70.7    229 Yes      \n#>  5 Business in …      135    251       35.0    386 No       \n#>  6 Chemistry           26     14       65       40 Yes      \n#>  7 Computer Sci…       21     47       30.9     68 No       \n#>  8 Conservation…       38     20       65.5     58 Yes      \n#>  9 Economics          128    349       26.8    477 No       \n#> 10 English            131     54       70.8    185 Yes      \n#> # … with 17 more rows\nslumajors_df %>% mutate(large_majority =\n                          case_when(percfemale >= 70 ~ \"female\",\n                                    percfemale <= 30 ~ \"male\",\n                                    percfemale > 30 & percfemale < 70 ~ \"none\")) \n#> # A tibble: 27 x 6\n#>    Major    nfemales nmales percfemale ntotal large_majority\n#>    <chr>       <dbl>  <dbl>      <dbl>  <dbl> <chr>         \n#>  1 Anthrop…       34     15       69.4     49 none          \n#>  2 Art & A…       65     11       85.5     76 female        \n#>  3 Biochem…       14     11       56       25 none          \n#>  4 Biology       162     67       70.7    229 female        \n#>  5 Busines…      135    251       35.0    386 none          \n#>  6 Chemist…       26     14       65       40 none          \n#>  7 Compute…       21     47       30.9     68 none          \n#>  8 Conserv…       38     20       65.5     58 none          \n#>  9 Economi…      128    349       26.8    477 male          \n#> 10 English       131     54       70.8    185 female        \n#> # … with 17 more rows\nslumajors_df <- slumajors_df %>%\n  mutate(morewomen = if_else(percfemale > 50,\n                             true = \"Yes\",\n                             false = \"No\")) %>%\n  mutate(large_majority =\n           case_when(percfemale >= 70 ~ \"female\",\n                     percfemale <= 30 ~ \"male\",\n                     percfemale > 30 & percfemale < 70 ~ \"none\")) "},{"path":"dplyr.html","id":"exercise-3-1","chapter":"4 Wrangling with dplyr","heading":"4.1.3 Exercises","text":"Exercises marked * indicate exercise solution end chapter 4.6.think ethical exclude non-binary genders analyses graphs slumajors data set? ?think ethical exclude non-binary genders analyses graphs slumajors data set? ?* Create new variable called major_size “large” total number majors 100 “small” total number majors less 100.* Create new variable called major_size “large” total number majors 100 “small” total number majors less 100.Create new variable called major_size2 “large total number majors 150 ,”medium\" total number majors 41 149, “small” total number majors 40 fewer.Create new variable called major_size2 “large total number majors 150 ,”medium\" total number majors 41 149, “small” total number majors 40 fewer.55% SLU students identify female. , definition morewomen variable, make sense use 55% cutoff 50%?55% SLU students identify female. , definition morewomen variable, make sense use 55% cutoff 50%?* Investigate happens case_when() give overlapping conditions give conditions don’t cover observations. overlapping conditions, create variable testcase \"Yes\" percfemale greater equal 40 \"\" percfemale greater 60 conditions don’t cover observations, create variable testcase2 \"Yes\" percefemale greater equal 55 \"\" percfemale less 35.* Investigate happens case_when() give overlapping conditions give conditions don’t cover observations. overlapping conditions, create variable testcase \"Yes\" percfemale greater equal 40 \"\" percfemale greater 60 conditions don’t cover observations, create variable testcase2 \"Yes\" percefemale greater equal 55 \"\" percfemale less 35.one two newly created variables mutate(), create plot investigates question interest might data.one two newly created variables mutate(), create plot investigates question interest might data.","code":""},{"path":"dplyr.html","id":"arrange-select-and-slice-and-filter","chapter":"4 Wrangling with dplyr","heading":"4.2 arrange(), select(), and slice(), and filter()","text":"arrange() used order rows data set according variable, select() used choose columns keep (get rid ) filter() used keep (get rid ) observations (rows).","code":""},{"path":"dplyr.html","id":"arrange-ordering-rows","chapter":"4 Wrangling with dplyr","heading":"4.2.1 arrange(): Ordering Rows","text":"arrange() function allows us order rows data set using one variables. function straightforward. Suppose want order rows majors lowest percfemale first:major lowest percentage female graduates?see , default, arrange() orders rows low high. order high low majors highest percfemale first, use desc() around variable ordering :major highest percentage women graduates?","code":"\nslumajors_df %>% arrange(percfemale)\n#> # A tibble: 27 x 7\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Economics          128    349       26.8    477 No       \n#>  2 Physics              6     14       30       20 No       \n#>  3 Computer Sci…       21     47       30.9     68 No       \n#>  4 Business in …      135    251       35.0    386 No       \n#>  5 Music               13     21       38.2     34 No       \n#>  6 Geology             28     41       40.6     69 No       \n#>  7 History             62     82       43.1    144 No       \n#>  8 Philosophy          24     29       45.3     53 No       \n#>  9 Mathematics         74     83       47.1    157 No       \n#> 10 Government         127    116       52.3    243 Yes      \n#> # … with 17 more rows, and 1 more variable:\n#> #   large_majority <chr>\nslumajors_df %>% arrange(desc(percfemale))\n#> # A tibble: 27 x 7\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Art & Art Hi…       65     11       85.5     76 Yes      \n#>  2 Psychology         278     61       82.0    339 Yes      \n#>  3 French              27      7       79.4     34 Yes      \n#>  4 Spanish             35     10       77.8     45 Yes      \n#>  5 Statistics          28      9       75.7     37 Yes      \n#>  6 Global Studi…       69     27       71.9     96 Yes      \n#>  7 Neuroscience        61     24       71.8     85 Yes      \n#>  8 Performance …      144     57       71.6    201 Yes      \n#>  9 Religious St…       10      4       71.4     14 Yes      \n#> 10 English            131     54       70.8    185 Yes      \n#> # … with 17 more rows, and 1 more variable:\n#> #   large_majority <chr>"},{"path":"dplyr.html","id":"select-choose-columns","chapter":"4 Wrangling with dplyr","heading":"4.2.2 select() Choose Columns","text":"might also interested getting rid columns data set. One reason overwhelming (30+) columns data set, know just need . easiest way use select() just input names columns want keep. example, interested majors totals, doIf wanted use data set anything else, ’d also need name, rename, <-. probably want name something slumajors_df overwrite original data set, case want use variables later!might also want use select() get rid one two columns. case, denote column want get rid -. example, might want get rid ntotal column made get rid nmales nfemales columns:select() comes many useful helper functions, oftentimes needed. One helper functions actually often useful everything(). can, example, use using mutate() put variable just created front data set make sure weren’t unexpected issues:Verify propfemale now appears first data set. everything() tacks remaining variables propfemale. , case, ’s useful way re-order columns might interested appears first.","code":"\nslumajors_df %>% select(Major, ntotal)\n#> # A tibble: 27 x 2\n#>    Major                        ntotal\n#>    <chr>                         <dbl>\n#>  1 Anthropology                     49\n#>  2 Art & Art History                76\n#>  3 Biochemistry                     25\n#>  4 Biology                         229\n#>  5 Business in the Liberal Arts    386\n#>  6 Chemistry                        40\n#>  7 Computer Science                 68\n#>  8 Conservation Biology             58\n#>  9 Economics                       477\n#> 10 English                         185\n#> # … with 17 more rows\nslumajors_df %>% select(-ntotal, -nfemales, -nmales)\n#> # A tibble: 27 x 4\n#>    Major                 percfemale morewomen large_majority\n#>    <chr>                      <dbl> <chr>     <chr>         \n#>  1 Anthropology                69.4 Yes       none          \n#>  2 Art & Art History           85.5 Yes       female        \n#>  3 Biochemistry                56   Yes       none          \n#>  4 Biology                     70.7 Yes       female        \n#>  5 Business in the Libe…       35.0 No        none          \n#>  6 Chemistry                   65   Yes       none          \n#>  7 Computer Science            30.9 No        none          \n#>  8 Conservation Biology        65.5 Yes       none          \n#>  9 Economics                   26.8 No        male          \n#> 10 English                     70.8 Yes       female        \n#> # … with 17 more rows\nslumajors_df %>% mutate(propfemale = percfemale / 100) %>%\n  select(propfemale, everything())\n#> # A tibble: 27 x 8\n#>    propfemale Major        nfemales nmales percfemale ntotal\n#>         <dbl> <chr>           <dbl>  <dbl>      <dbl>  <dbl>\n#>  1      0.694 Anthropology       34     15       69.4     49\n#>  2      0.855 Art & Art H…       65     11       85.5     76\n#>  3      0.56  Biochemistry       14     11       56       25\n#>  4      0.707 Biology           162     67       70.7    229\n#>  5      0.350 Business in…      135    251       35.0    386\n#>  6      0.65  Chemistry          26     14       65       40\n#>  7      0.309 Computer Sc…       21     47       30.9     68\n#>  8      0.655 Conservatio…       38     20       65.5     58\n#>  9      0.268 Economics         128    349       26.8    477\n#> 10      0.708 English           131     54       70.8    185\n#> # … with 17 more rows, and 2 more variables:\n#> #   morewomen <chr>, large_majority <chr>"},{"path":"dplyr.html","id":"slice-and-filter-choose-rows","chapter":"4 Wrangling with dplyr","heading":"4.2.3 slice() and filter(): Choose Rows","text":"Instead choosing columns keep, can also choose certain rows keep using either slice() filter().slice() allows specify row numbers corresponding rows want keep. example, suppose want keep rows five popular majors:can alternatively use slice(1:5), shorthand slice(1, 2, 3, 4, 5). slice() useful, relatively simple. ’ll come back weeks well discuss subsetting base R.filter() way keep rows specifying condition related one variables data set. ’ve already seen conditions if_else() case_when() statements, ’ll now used “filter” rows data set.can keep rows based categorical variable quantitative variable combination number categorical quantitative variables. R uses following symbols make comparisons. ’ve already using intuitive symbols (like < >):< <= less less equal , respectively> >= greater greater equal , respectively== equal (careful: equal double equal sign ==)!= equal (general, ! denotes “”)’s probably time change data set ! ’ll working babynames data set rest chapter:needed, can remind babynames data set typing ?babynames console window.following statements ? See can guess running code.things put quotes, like \"Matthew\" things aren’t, like 2000? Can make pattern?can also combine conditions multiple variables filter() using Boolean operators. ’ve already seen one case_when() statement : & means “.”Look Venn diagrams R Data Science learn various Boolean operators can use R: https://r4ds..co.nz/transform.html#logical-operators. Boolean operators can used functions R well, ’ve already seen if_else() case_when().following gives examples. See can figure line code running .","code":"\nslumajors_df %>% arrange(desc(ntotal)) %>%\n  slice(1, 2, 3, 4, 5)\n#> # A tibble: 5 x 7\n#>   Major          nfemales nmales percfemale ntotal morewomen\n#>   <chr>             <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#> 1 Economics           128    349       26.8    477 No       \n#> 2 Business in t…      135    251       35.0    386 No       \n#> 3 Psychology          278     61       82.0    339 Yes      \n#> 4 Government          127    116       52.3    243 Yes      \n#> 5 Biology             162     67       70.7    229 Yes      \n#> # … with 1 more variable: large_majority <chr>\nlibrary(babynames)\nbabynames\n#> # A tibble: 1,924,665 x 5\n#>     year sex   name          n   prop\n#>    <dbl> <chr> <chr>     <int>  <dbl>\n#>  1  1880 F     Mary       7065 0.0724\n#>  2  1880 F     Anna       2604 0.0267\n#>  3  1880 F     Emma       2003 0.0205\n#>  4  1880 F     Elizabeth  1939 0.0199\n#>  5  1880 F     Minnie     1746 0.0179\n#>  6  1880 F     Margaret   1578 0.0162\n#>  7  1880 F     Ida        1472 0.0151\n#>  8  1880 F     Alice      1414 0.0145\n#>  9  1880 F     Bertha     1320 0.0135\n#> 10  1880 F     Sarah      1288 0.0132\n#> # … with 1,924,655 more rows\nbabynames %>% filter(name == \"Matthew\")\nbabynames %>% filter(year >= 2000)\nbabynames %>% filter(sex != \"M\")\nbabynames %>% filter(prop > 0.05)\nbabynames %>% filter(year == max(year))\nbabynames %>% filter(n > 20000 | prop > 0.05)\nbabynames %>% filter(sex == \"F\" & name == \"Mary\")\nbabynames %>% filter(sex == \"F\" & name == \"Mary\" & prop > 0.05)"},{"path":"dplyr.html","id":"exercise-3-2","chapter":"4 Wrangling with dplyr","heading":"4.2.4 Exercises","text":"Exercises marked * indicate exercise solution end chapter 4.6.happens arrange() one categorical variables slumajors_df data set?happens arrange() one categorical variables slumajors_df data set?* Use select() everything() put large_majority variable first column slumajors_df data set.* Use select() everything() put large_majority variable first column slumajors_df data set.* babynames data set, use filter(), mutate() rank(), arrange() print 10 popular Male babynames 2017.* babynames data set, use filter(), mutate() rank(), arrange() print 10 popular Male babynames 2017.babynames data set, use filter() keep rows name (, another name interests ) one sex (either \"M\" \"F\"). Name new data set something construct line plot looks either n prop chosen name year.babynames data set, use filter() keep rows name (, another name interests ) one sex (either \"M\" \"F\"). Name new data set something construct line plot looks either n prop chosen name year.","code":""},{"path":"dplyr.html","id":"summarise-and-group_by-create-summaries","chapter":"4 Wrangling with dplyr","heading":"4.3 summarise() and group_by(): Create Summaries","text":"summarise() function useful get summaries data. example, suppose want know average major size SLU across five year span total number majors across five years. can use summarise() summary function, like mean(), sum(), median(), max(), min(), n(), etc. ’ll notice format summarise() extremely similar format mutate(). Using slumajors_df data just one quick example,","code":"\nslumajors_df %>%\n  summarise(meantotalmajor = mean(ntotal),\n            totalgrad = sum(ntotal))\n#> # A tibble: 1 x 2\n#>   meantotalmajor totalgrad\n#>            <dbl>     <dbl>\n#> 1           124.      3347"},{"path":"dplyr.html","id":"group_by-groups","chapter":"4 Wrangling with dplyr","heading":"4.3.1 group_by(): Groups","text":"summarise() often useful paired group_by() statement. allows us get summaries across different groups.example, suppose wanted total number registered births per year babynames data set:group_by() takes grouping variable, , using summarise() computes given summary function group.summary functions intuitive ’ve intro stat. , ’re sure whether summary getting maximum maximum() max(), just try !n() function can used within summarise() obtain number observations. give total number rows, used without group_by()Note n() typically doesn’t inputs. ’s typically useful paired group_by(): allows us see number observations within year, instance:","code":"\nbabynames %>% group_by(year) %>%\n  summarise(totalbirths = sum(n))\n#> # A tibble: 138 x 2\n#>     year totalbirths\n#>    <dbl>       <int>\n#>  1  1880      201484\n#>  2  1881      192696\n#>  3  1882      221533\n#>  4  1883      216946\n#>  5  1884      243462\n#>  6  1885      240854\n#>  7  1886      255317\n#>  8  1887      247394\n#>  9  1888      299473\n#> 10  1889      288946\n#> # … with 128 more rows\nbabynames %>% summarise(totalobs = n())\n#> # A tibble: 1 x 1\n#>   totalobs\n#>      <int>\n#> 1  1924665\nbabynames %>% group_by(year) %>%\n  summarise(ngroup = n())\n#> # A tibble: 138 x 2\n#>     year ngroup\n#>    <dbl>  <int>\n#>  1  1880   2000\n#>  2  1881   1935\n#>  3  1882   2127\n#>  4  1883   2084\n#>  5  1884   2297\n#>  6  1885   2294\n#>  7  1886   2392\n#>  8  1887   2373\n#>  9  1888   2651\n#> 10  1889   2590\n#> # … with 128 more rows"},{"path":"dplyr.html","id":"exercise-3-3","chapter":"4 Wrangling with dplyr","heading":"4.3.2 Exercises","text":"Exercises marked * indicate exercise solution end chapter 4.6.Compare summarise() mutate() using following code. ’s difference two functions?Using data set group_by() n() combination,make line plot ngroup x-axis year y-axis. interpret plot?* Create data set column name column shows total number births name across years sexes.* Create data set column name column shows total number births name across years sexes.* group_by() can also used functions, including mutate(). Use group_by() mutate() rank names least popular year-sex combination.* group_by() can also used functions, including mutate(). Use group_by() mutate() rank names least popular year-sex combination.* data set 4, filter() data keep popular name year-sex combination construct summary table showing many times name appears popular name.* data set 4, filter() data keep popular name year-sex combination construct summary table showing many times name appears popular name.* Run following code. Intuitively, slice(1, 2, 3, 4, 5) grab first five rows data set, , try run , get 1380 rows. Try figure issue using Google search something like “dplyr slicing correctly using group .” find?* Run following code. Intuitively, slice(1, 2, 3, 4, 5) grab first five rows data set, , try run , get 1380 rows. Try figure issue using Google search something like “dplyr slicing correctly using group .” find?","code":"\nslumajors_df %>%\n  summarise(meantotalmajor = mean(ntotal),\n            totalgrad = sum(ntotal)) \nslumajors_df %>%\n  mutate(meantotalmajor = mean(ntotal),\n            totalgrad = sum(ntotal)) %>%\n  select(meantotalmajor, totalgrad, everything())\nbabynames %>% group_by(year) %>%\n  summarise(ngroup = n())\n#> # A tibble: 138 x 2\n#>     year ngroup\n#>    <dbl>  <int>\n#>  1  1880   2000\n#>  2  1881   1935\n#>  3  1882   2127\n#>  4  1883   2084\n#>  5  1884   2297\n#>  6  1885   2294\n#>  7  1886   2392\n#>  8  1887   2373\n#>  9  1888   2651\n#> 10  1889   2590\n#> # … with 128 more rows\nbabynames_test <- babynames %>%\n  group_by(year, sex) %>% mutate(ntest = n / prop)\nbabynames_test %>% slice(1, 2, 3, 4, 5)\n#> # A tibble: 1,380 x 6\n#> # Groups:   year, sex [276]\n#>     year sex   name          n   prop   ntest\n#>    <dbl> <chr> <chr>     <int>  <dbl>   <dbl>\n#>  1  1880 F     Mary       7065 0.0724  97605.\n#>  2  1880 F     Anna       2604 0.0267  97605.\n#>  3  1880 F     Emma       2003 0.0205  97605.\n#>  4  1880 F     Elizabeth  1939 0.0199  97605.\n#>  5  1880 F     Minnie     1746 0.0179  97605.\n#>  6  1880 M     John       9655 0.0815 118400.\n#>  7  1880 M     William    9532 0.0805 118400.\n#>  8  1880 M     James      5927 0.0501 118400.\n#>  9  1880 M     Charles    5348 0.0452 118400.\n#> 10  1880 M     George     5126 0.0433 118400.\n#> # … with 1,370 more rows"},{"path":"dplyr.html","id":"missing-values","chapter":"4 Wrangling with dplyr","heading":"4.4 Missing Values","text":"data sets ’ve worked nice missing values. ’ll see plenty examples data sets missing values later, examine various functions ’ve talked far tackle missing values.Missing values R denoted NA “Available.” Run following code create toy data set missing values can see various functions ’ve used far deal NA values.","code":"\ntoy_df <- tibble(x = c(NA, 3, 4, 7),\n                 y = c(1, 4, 3, 2),\n                 z = c(\"A\", \"A\", \"B\", NA))\ntoy_df\n#> # A tibble: 4 x 3\n#>       x     y z    \n#>   <dbl> <dbl> <chr>\n#> 1    NA     1 A    \n#> 2     3     4 A    \n#> 3     4     3 B    \n#> 4     7     2 <NA>"},{"path":"dplyr.html","id":"exercise-3-4","chapter":"4 Wrangling with dplyr","heading":"4.4.1 Exercises","text":"Exercises marked * indicate exercise solution end chapter 4.6.* mutate(). Try create new variable mutate() involving x. R missing value?* mutate(). Try create new variable mutate() involving x. R missing value?arrange(). Try arranging data set x. R missing value?arrange(). Try arranging data set x. R missing value?filter(). Try filtering observations x less 5 kept. R missing value?filter(). Try filtering observations x less 5 kept. R missing value?summarise(). Try using summarise() function involving x. R return?summarise(). Try using summarise() function involving x. R return?group_by() summarise(). statement 4, add group_by(z) statement summarise(). R return now?group_by() summarise(). statement 4, add group_by(z) statement summarise(). R return now?","code":""},{"path":"dplyr.html","id":"removing-missing-values","chapter":"4 Wrangling with dplyr","heading":"4.4.2 Removing Missing Values","text":"Missing values removed without carefully examination note consequences might (e.g. values missing?). toy data set meaningless, aren’t asking questions now, data set missing values!investigated missing values comfortable removing , many functions use summarise() na.rm argument can set TRUE tell summarise() remove NAs taking mean(), median(), max(), etc.want remove missing values directly, can use .na() function combination filter(). variable NA (Available) observation, .na() evaluates TRUE; , .na() evaluates FALSE. Test using mutate() create new variable whether Median missing:missingx TRUE first observation. can use advantage filter() filter data set, without going extra step actually making new variable missingx:’ll commonly see written short-hand people’s code may come across :says “keep anything missing x value” (recall ! means “”).","code":"\ntoy_df %>% summarise(meanx = mean(x, na.rm = TRUE))\n#> # A tibble: 1 x 1\n#>   meanx\n#>   <dbl>\n#> 1  4.67\ntoy_df %>% mutate(missingx = is.na(x))\n#> # A tibble: 4 x 4\n#>       x     y z     missingx\n#>   <dbl> <dbl> <chr> <lgl>   \n#> 1    NA     1 A     TRUE    \n#> 2     3     4 A     FALSE   \n#> 3     4     3 B     FALSE   \n#> 4     7     2 <NA>  FALSE\ntoy_df %>% filter(is.na(x) != TRUE)\n#> # A tibble: 3 x 3\n#>       x     y z    \n#>   <dbl> <dbl> <chr>\n#> 1     3     4 A    \n#> 2     4     3 B    \n#> 3     7     2 <NA>\ntoy_df %>% filter(!is.na(x))\n#> # A tibble: 3 x 3\n#>       x     y z    \n#>   <dbl> <dbl> <chr>\n#> 1     3     4 A    \n#> 2     4     3 B    \n#> 3     7     2 <NA>"},{"path":"dplyr.html","id":"chapexercise-3","chapter":"4 Wrangling with dplyr","heading":"4.5 Chapter Exercises","text":"found SLU majors data set FiveThirtyEight majors data set Statistics higher proportion women almost STEM fields. Read first two sections article. Write 2-3 sentences article’s reasoning women statistics STEM fields.found SLU majors data set FiveThirtyEight majors data set Statistics higher proportion women almost STEM fields. Read first two sections article. Write 2-3 sentences article’s reasoning women statistics STEM fields.* . Choose 5 names interest create new data set data 5 names.* . Choose 5 names interest create new data set data 5 names.Use group_by() summarise() add together number Females Males name year. Hint: can group_by() one variable!Use group_by() summarise() add together number Females Males name year. Hint: can group_by() one variable!Make line plot showing popularity 5 names time.Make line plot showing popularity 5 names time.Choose year sex interests filter data set contain observations year sex.\nChoose year sex interests filter data set contain observations year sex.Create new variable ranks names popular least popular.Create new variable ranks names popular least popular.Create bar plot shows 10 popular names well count name.Create bar plot shows 10 popular names well count name.* cases throughout chapter, ’ve renamed data sets using <- name likeIn cases, ’ve given data set new name, likeFor functions generally “safe” name data set using name using function. ?mutate()mutate()arrange()arrange()filter()filter()summarise()summarise()select()select()Pose question babynames data set answer question either graphic data summary.","code":"\ntoy_df <- toy_df %>% mutate(newvar = x / y)\ntoy_small <- toy_df %>% filter(!is.na(x))"},{"path":"dplyr.html","id":"solutions-3","chapter":"4 Wrangling with dplyr","heading":"4.6 Exercise Solutions","text":"","code":""},{"path":"dplyr.html","id":"mutate-s","chapter":"4 Wrangling with dplyr","heading":"4.6.1 mutate() S","text":"* Create new variable called major_size “large” total number majors 100 “small” total number majors less 100.* Investigate happens case_when() give overlapping conditions give conditions don’t cover observations. overlapping conditions, create variable testcase \"Yes\" percfemale greater equal 40 \"\" percfemale greater 60 conditions don’t cover observations, create variable testcase2 \"Yes\" percefemale greater equal 55 \"\" percfemale less 35.overlapping cases, case_when prioritizes first case given.non-coverage, observation covered given NA.","code":"\nslumajors_df %>% mutate(major_size = if_else(ntotal >= 100,\n                                             true = \"large\",\n                                             false = \"small\"))\n#> # A tibble: 27 x 8\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Anthropology        34     15       69.4     49 Yes      \n#>  2 Art & Art Hi…       65     11       85.5     76 Yes      \n#>  3 Biochemistry        14     11       56       25 Yes      \n#>  4 Biology            162     67       70.7    229 Yes      \n#>  5 Business in …      135    251       35.0    386 No       \n#>  6 Chemistry           26     14       65       40 Yes      \n#>  7 Computer Sci…       21     47       30.9     68 No       \n#>  8 Conservation…       38     20       65.5     58 Yes      \n#>  9 Economics          128    349       26.8    477 No       \n#> 10 English            131     54       70.8    185 Yes      \n#> # … with 17 more rows, and 2 more variables:\n#> #   large_majority <chr>, major_size <chr>\n## OR\nslumajors_df %>%\n  mutate(major_size = case_when(ntotal >= 100 ~ \"large\",\n                                ntotal < 100 ~ \"small\"))\n#> # A tibble: 27 x 8\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Anthropology        34     15       69.4     49 Yes      \n#>  2 Art & Art Hi…       65     11       85.5     76 Yes      \n#>  3 Biochemistry        14     11       56       25 Yes      \n#>  4 Biology            162     67       70.7    229 Yes      \n#>  5 Business in …      135    251       35.0    386 No       \n#>  6 Chemistry           26     14       65       40 Yes      \n#>  7 Computer Sci…       21     47       30.9     68 No       \n#>  8 Conservation…       38     20       65.5     58 Yes      \n#>  9 Economics          128    349       26.8    477 No       \n#> 10 English            131     54       70.8    185 Yes      \n#> # … with 17 more rows, and 2 more variables:\n#> #   large_majority <chr>, major_size <chr>#> # A tibble: 27 x 9\n#>    Major         nfemales nmales percfemale ntotal morewomen\n#>    <chr>            <dbl>  <dbl>      <dbl>  <dbl> <chr>    \n#>  1 Anthropology        34     15       69.4     49 Yes      \n#>  2 Art & Art Hi…       65     11       85.5     76 Yes      \n#>  3 Biochemistry        14     11       56       25 Yes      \n#>  4 Biology            162     67       70.7    229 Yes      \n#>  5 Business in …      135    251       35.0    386 No       \n#>  6 Chemistry           26     14       65       40 Yes      \n#>  7 Computer Sci…       21     47       30.9     68 No       \n#>  8 Conservation…       38     20       65.5     58 Yes      \n#>  9 Economics          128    349       26.8    477 No       \n#> 10 English            131     54       70.8    185 Yes      \n#> # … with 17 more rows, and 3 more variables:\n#> #   large_majority <chr>, testcase <chr>, testcase2 <chr>"},{"path":"dplyr.html","id":"arrange-select-.-s","chapter":"4 Wrangling with dplyr","heading":"4.6.2 arrange(), select(), …. S","text":"* Use select() everything() put large_majority variable first column slumajors_df data set.* babynames data set, use filter(), mutate() rank(), arrange() print 10 popular Male babynames 2017.","code":"\nslumajors_df %>% select(large_majority, everything())\n#> # A tibble: 27 x 7\n#>    large_majority Major    nfemales nmales percfemale ntotal\n#>    <chr>          <chr>       <dbl>  <dbl>      <dbl>  <dbl>\n#>  1 none           Anthrop…       34     15       69.4     49\n#>  2 female         Art & A…       65     11       85.5     76\n#>  3 none           Biochem…       14     11       56       25\n#>  4 female         Biology       162     67       70.7    229\n#>  5 none           Busines…      135    251       35.0    386\n#>  6 none           Chemist…       26     14       65       40\n#>  7 none           Compute…       21     47       30.9     68\n#>  8 none           Conserv…       38     20       65.5     58\n#>  9 male           Economi…      128    349       26.8    477\n#> 10 female         English       131     54       70.8    185\n#> # … with 17 more rows, and 1 more variable: morewomen <chr>\nbabynames %>% filter(sex == \"M\" & year == 2017) %>%\n  mutate(rankname = rank(desc(n))) %>%\n  filter(rankname <= 10)\n#> # A tibble: 10 x 6\n#>     year sex   name         n    prop rankname\n#>    <dbl> <chr> <chr>    <int>   <dbl>    <dbl>\n#>  1  2017 M     Liam     18728 0.00954        1\n#>  2  2017 M     Noah     18326 0.00933        2\n#>  3  2017 M     William  14904 0.00759        3\n#>  4  2017 M     James    14232 0.00725        4\n#>  5  2017 M     Logan    13974 0.00712        5\n#>  6  2017 M     Benjamin 13733 0.00699        6\n#>  7  2017 M     Mason    13502 0.00688        7\n#>  8  2017 M     Elijah   13268 0.00676        8\n#>  9  2017 M     Oliver   13141 0.00669        9\n#> 10  2017 M     Jacob    13106 0.00668       10"},{"path":"dplyr.html","id":"summarise-and-group_by-s","chapter":"4 Wrangling with dplyr","heading":"4.6.3 summarise() and group_by() S","text":"* Create data set column name column shows total number births name across years sexes.* group_by() can also used functions, including mutate(). Use group_by() mutate() rank names least popular year-sex combination.* data set 4, filter() data keep popular name year-sex combination construct summary table showing many times name appears popular name.* Run following code. Intuitively, slice(1, 2, 3, 4, 5) grab first five rows data set, , try run , get 1380 rows. Try figure issue using Google search something like “dplyr slicing correctly using group .” find?Functions like slice() rank() operate defined groups data set using function like group_by() first. Sometimes feature quite convenient. , longer want slice() rank() functions account groups, need add ungroup() pipe, simply drops groups formed:","code":"\nbabynames %>% group_by(name) %>%\n  summarise(totalbirths = sum(n))\n#> # A tibble: 97,310 x 2\n#>    name      totalbirths\n#>    <chr>           <int>\n#>  1 Aaban             107\n#>  2 Aabha              35\n#>  3 Aabid              10\n#>  4 Aabir               5\n#>  5 Aabriella          32\n#>  6 Aada                5\n#>  7 Aadam             254\n#>  8 Aadan             130\n#>  9 Aadarsh           199\n#> 10 Aaden            4658\n#> # … with 97,300 more rows\nranked_babynames <- babynames %>% group_by(year, sex) %>%\n  mutate(rankname = rank((desc(n))))\nranked_babynames %>% filter(rankname == 1) %>%\n  group_by(name) %>%\n  summarise(nappear = n()) %>%\n  arrange(desc(nappear))\n#> # A tibble: 18 x 2\n#>    name     nappear\n#>    <chr>      <int>\n#>  1 Mary          76\n#>  2 John          44\n#>  3 Michael       44\n#>  4 Robert        17\n#>  5 Jennifer      15\n#>  6 Jacob         14\n#>  7 James         13\n#>  8 Emily         12\n#>  9 Jessica        9\n#> 10 Lisa           8\n#> 11 Linda          6\n#> 12 Emma           5\n#> 13 Noah           4\n#> 14 Sophia         3\n#> 15 Ashley         2\n#> 16 Isabella       2\n#> 17 David          1\n#> 18 Liam           1\nbabynames_test <- babynames %>%\n  group_by(year, sex) %>% mutate(ntest = n / prop)\nbabynames_test %>% slice(1, 2, 3, 4, 5)\n#> # A tibble: 1,380 x 6\n#> # Groups:   year, sex [276]\n#>     year sex   name          n   prop   ntest\n#>    <dbl> <chr> <chr>     <int>  <dbl>   <dbl>\n#>  1  1880 F     Mary       7065 0.0724  97605.\n#>  2  1880 F     Anna       2604 0.0267  97605.\n#>  3  1880 F     Emma       2003 0.0205  97605.\n#>  4  1880 F     Elizabeth  1939 0.0199  97605.\n#>  5  1880 F     Minnie     1746 0.0179  97605.\n#>  6  1880 M     John       9655 0.0815 118400.\n#>  7  1880 M     William    9532 0.0805 118400.\n#>  8  1880 M     James      5927 0.0501 118400.\n#>  9  1880 M     Charles    5348 0.0452 118400.\n#> 10  1880 M     George     5126 0.0433 118400.\n#> # … with 1,370 more rows\nbabynames_test %>% ungroup() %>% slice(1:5)\n#> # A tibble: 5 x 6\n#>    year sex   name          n   prop  ntest\n#>   <dbl> <chr> <chr>     <int>  <dbl>  <dbl>\n#> 1  1880 F     Mary       7065 0.0724 97605.\n#> 2  1880 F     Anna       2604 0.0267 97605.\n#> 3  1880 F     Emma       2003 0.0205 97605.\n#> 4  1880 F     Elizabeth  1939 0.0199 97605.\n#> 5  1880 F     Minnie     1746 0.0179 97605."},{"path":"dplyr.html","id":"missing-values-s","chapter":"4 Wrangling with dplyr","heading":"4.6.4 Missing Values S","text":"* mutate(). Try create new variable mutate() involving x. R missing value?R puts another NA place x times y observation missing x.","code":"\ntoy_df %>% mutate(xy = x * y)\n#> # A tibble: 4 x 5\n#>       x     y z     newvar    xy\n#>   <dbl> <dbl> <chr>  <dbl> <dbl>\n#> 1    NA     1 A      NA       NA\n#> 2     3     4 A       0.75    12\n#> 3     4     3 B       1.33    12\n#> 4     7     2 <NA>    3.5     14"},{"path":"dplyr.html","id":"chapexercise-3-S","chapter":"4 Wrangling with dplyr","heading":"4.6.5 Chapter Exercises S","text":"* . Choose 5 names interest create new data set data 5 names.Use group_by() summarise() add together number Females Males name year. Hint: can group_by() one variable!Use group_by() summarise() add together number Females Males name year. Hint: can group_by() one variable!Make line plot showing popularity 5 names time.Make line plot showing popularity 5 names time.* cases throughout chapter, ’ve renamed data sets using <- name likeIn cases, ’ve given data set new name, likeFor functions generally “safe” name data set using name using function. ?mutate()Usually fine: mutating creates new variable, doesn’t change variables data set, things get messed new variable.arrange()Usually fine: ordering rows certain way won’t change plots doesn’t change underlying data.filter()Usually best practice. Naming data set name filter means permanently lose data filtered , unless re-read data set beginning.summarise()Usually best practice. , naming summarized data set original data means lose original data, unless re-read beginning. example,means now way access original data toy_df.select()can sometimes okay ’re sure variables removing won’t ever used.","code":"\nbaby5 <- babynames %>% filter(name == \"Matthew\" | name == \"Ivan\" |\n                                name == \"Jessica\" | name == \"Robin\" |\n                                name == \"Michael\")\nbaby5_tot <- baby5 %>% group_by(year, name) %>%\n  summarise(ntot = sum(n))\n#> `summarise()` has grouped output by 'year'. You can override using the `.groups` argument.\nggplot(data = baby5_tot, aes(x = year, y = ntot, colour = name)) +\n  geom_line()\ntoy_df <- toy_df %>% mutate(newvar = x / y)\ntoy_small <- toy_df %>% filter(!is.na(x))\ntoy_df <- toy_df %>% summarise(meanx = mean(x))\ntoy_df\n#> # A tibble: 1 x 1\n#>   meanx\n#>   <dbl>\n#> 1    NA"},{"path":"dplyr.html","id":"rcode-3","chapter":"4 Wrangling with dplyr","heading":"4.7 Non-Exercise R Code","text":"","code":"\nlibrary(babynames)\nhead(babynames)\nlibrary(tidyverse)\nslumajors_df <- read_csv(\"data/SLU_Majors_15_19.csv\")\nslumajors_df\nslumajors_df %>% mutate(ntotal = nfemales + nmales)\nslumajors_df %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))\nslumajors_df <- slumajors_df %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))\nslumajors_df <- slumajors_df %>% mutate(ntotal = nfemales + nmales)\nslumajors_df <- slumajors_df %>%\n  mutate(ntotal = nfemales + nmales) %>%\n  mutate(percfemale = 100 * nfemales / (nfemales + nmales))\nmutate(mutate(slumajors_df, ntotal = nfemales + nmales), percfemale = 100 * nfemales / (nfemales + nmales))\nslumajors_df %>% mutate(morewomen = if_else(percfemale > 50,\n                                            true = \"Yes\",\n                                            false = \"No\"))\nslumajors_df %>% mutate(large_majority =\n                          case_when(percfemale >= 70 ~ \"female\",\n                                    percfemale <= 30 ~ \"male\",\n                                    percfemale > 30 & percfemale < 70 ~ \"none\")) \nslumajors_df <- slumajors_df %>%\n  mutate(morewomen = if_else(percfemale > 50,\n                             true = \"Yes\",\n                             false = \"No\")) %>%\n  mutate(large_majority =\n           case_when(percfemale >= 70 ~ \"female\",\n                     percfemale <= 30 ~ \"male\",\n                     percfemale > 30 & percfemale < 70 ~ \"none\")) \nslumajors_df %>% arrange(percfemale)\nslumajors_df %>% arrange(desc(percfemale))\nslumajors_df %>% select(Major, ntotal)\nslumajors_df %>% select(-ntotal, -nfemales, -nmales)\nslumajors_df %>% mutate(propfemale = percfemale / 100) %>%\n  select(propfemale, everything())\nslumajors_df %>% arrange(desc(ntotal)) %>%\n  slice(1, 2, 3, 4, 5)\nlibrary(babynames)\nbabynames\nbabynames %>% filter(name == \"Matthew\")\nbabynames %>% filter(year >= 2000)\nbabynames %>% filter(sex != \"M\")\nbabynames %>% filter(prop > 0.05)\nbabynames %>% filter(year == max(year))\nbabynames %>% filter(n > 20000 | prop > 0.05)\nbabynames %>% filter(sex == \"F\" & name == \"Mary\")\nbabynames %>% filter(sex == \"F\" & name == \"Mary\" & prop > 0.05)\nslumajors_df %>%\n  summarise(meantotalmajor = mean(ntotal),\n            totalgrad = sum(ntotal))\nbabynames %>% group_by(year) %>%\n  summarise(totalbirths = sum(n))\nbabynames %>% summarise(totalobs = n())\nbabynames %>% group_by(year) %>%\n  summarise(ngroup = n())\ntoy_df %>% summarise(meanx = mean(x, na.rm = TRUE))\ntoy_df %>% mutate(missingx = is.na(x))\ntoy_df %>% filter(is.na(x) != TRUE)\ntoy_df %>% filter(!is.na(x))"}]
